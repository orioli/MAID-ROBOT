// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "protectPlugin.hpp"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



protectPlugin_ptr protectPlugin_Helper::_nil() {
  return ::protectPlugin::_nil();
}

::CORBA::Boolean protectPlugin_Helper::is_nil(::protectPlugin_ptr p) {
  return ::CORBA::is_nil(p);

}

void protectPlugin_Helper::release(::protectPlugin_ptr p) {
  ::CORBA::release(p);
}

void protectPlugin_Helper::marshalObjRef(::protectPlugin_ptr obj, cdrStream& s) {
  ::protectPlugin::_marshalObjRef(obj, s);
}

protectPlugin_ptr protectPlugin_Helper::unmarshalObjRef(cdrStream& s) {
  return ::protectPlugin::_unmarshalObjRef(s);
}

void protectPlugin_Helper::duplicate(::protectPlugin_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

protectPlugin_ptr
protectPlugin::_duplicate(::protectPlugin_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

protectPlugin_ptr
protectPlugin::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


protectPlugin_ptr
protectPlugin::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

protectPlugin_ptr
protectPlugin::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_protectPlugin _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_protectPlugin* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_protectPlugin;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* protectPlugin::_PD_repoId = "IDL:protectPlugin:1.0";


typedef OpenHRP::Plugin OpenHRP_Plugin;
typedef OpenHRP::_impl_Plugin OpenHRP__impl_Plugin;
typedef OpenHRP::_objref_Plugin OpenHRP__objref_Plugin;

typedef OpenHRP::CommandReceiver OpenHRP_CommandReceiver;
typedef OpenHRP::_impl_CommandReceiver OpenHRP__impl_CommandReceiver;
typedef OpenHRP::_objref_CommandReceiver OpenHRP__objref_CommandReceiver;

_objref_protectPlugin::~_objref_protectPlugin() {
  
}


_objref_protectPlugin::_objref_protectPlugin(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::protectPlugin::_PD_repoId, ior, id, 1),
   OpenHRP__objref_Plugin(ior, id)
   
{
  _PR_setobj(this);
}

void*
_objref_protectPlugin::_ptrToObjRef(const char* id)
{
  if( id == ::protectPlugin::_PD_repoId )
    return (::protectPlugin_ptr) this;
  if( id == ::OpenHRP::Plugin::_PD_repoId )
    return (::OpenHRP::Plugin_ptr) this;

  if( id == ::OpenHRP::CommandReceiver::_PD_repoId )
    return (::OpenHRP::CommandReceiver_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::protectPlugin::_PD_repoId) )
    return (::protectPlugin_ptr) this;
  if( omni::strMatch(id, ::OpenHRP::Plugin::_PD_repoId) )
    return (::OpenHRP::Plugin_ptr) this;

  if( omni::strMatch(id, ::OpenHRP::CommandReceiver::_PD_repoId) )
    return (::OpenHRP::CommandReceiver_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_a4_clong_o_a4_clong
class _0RL_cd_0821B9905AA697C0_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0821B9905AA697C0_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  protectPluginTypes::LngArray4 arg_0_;
  const protectPluginTypes::LngArray4_slice* arg_0;
  protectPluginTypes::LngArray4 arg_1_;
  protectPluginTypes::LngArray4_slice* arg_1;
};

void _0RL_cd_0821B9905AA697C0_00000000::marshalArguments(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Long*)arg_0),16,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 16);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 4; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_0821B9905AA697C0_00000000::unmarshalArguments(cdrStream& _n)
{
  _n.unmarshalArrayLong((_CORBA_Long*)((::CORBA::Long*)arg_0_), 4);
  arg_0 = &arg_0_[0];

}

void _0RL_cd_0821B9905AA697C0_00000000::marshalReturnedValues(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Long*)arg_1),16,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 16);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 4; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_0821B9905AA697C0_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  _n.unmarshalArrayLong((_CORBA_Long*)((::CORBA::Long*)arg_1), 4);

}

// Local call call-back function.
static void
_0RL_lcfn_0821B9905AA697C0_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0821B9905AA697C0_00000000* tcd = (_0RL_cd_0821B9905AA697C0_00000000*)cd;
  _impl_protectPlugin* impl = (_impl_protectPlugin*) svnt->_ptrToInterface(protectPlugin::_PD_repoId);
  impl->servoLock(tcd->arg_0, tcd->arg_1);


}

void _objref_protectPlugin::servoLock(const protectPluginTypes::LngArray4 inputID, protectPluginTypes::LngArray4 outputID)
{
  _0RL_cd_0821B9905AA697C0_00000000 _call_desc(_0RL_lcfn_0821B9905AA697C0_10000000, "servoLock", 10);
  _call_desc.arg_0 = &inputID[0];
  _call_desc.arg_1 = &outputID[0];

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_0821B9905AA697C0_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0821B9905AA697C0_00000000* tcd = (_0RL_cd_0821B9905AA697C0_00000000*)cd;
  _impl_protectPlugin* impl = (_impl_protectPlugin*) svnt->_ptrToInterface(protectPlugin::_PD_repoId);
  impl->servoUnLock(tcd->arg_0, tcd->arg_1);


}

void _objref_protectPlugin::servoUnLock(const protectPluginTypes::LngArray4 inputID, protectPluginTypes::LngArray4 outputID)
{
  _0RL_cd_0821B9905AA697C0_00000000 _call_desc(_0RL_lcfn_0821B9905AA697C0_20000000, "servoUnLock", 12);
  _call_desc.arg_0 = &inputID[0];
  _call_desc.arg_1 = &outputID[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_n_coctet
class _0RL_cd_0821B9905AA697C0_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0821B9905AA697C0_30000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0_;
  ::CORBA::Octet* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_0821B9905AA697C0_30000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_0821B9905AA697C0_30000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalOctet();
  arg_0 = &arg_0_;

}

void _0RL_cd_0821B9905AA697C0_30000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_0821B9905AA697C0_30000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  *arg_0 = _n.unmarshalOctet();

}

// Local call call-back function.
static void
_0RL_lcfn_0821B9905AA697C0_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0821B9905AA697C0_30000000* tcd = (_0RL_cd_0821B9905AA697C0_30000000*)cd;
  _impl_protectPlugin* impl = (_impl_protectPlugin*) svnt->_ptrToInterface(protectPlugin::_PD_repoId);
  tcd->result = impl->motionCancel(*tcd->arg_0);


}

::CORBA::Boolean _objref_protectPlugin::motionCancel(::CORBA::Octet& part)
{
  _0RL_cd_0821B9905AA697C0_30000000 _call_desc(_0RL_lcfn_0821B9905AA697C0_40000000, "motionCancel", 13);
  _call_desc.arg_0 = &(::CORBA::Octet&) part;

  _invoke(_call_desc);
  return _call_desc.result;


}
_pof_protectPlugin::~_pof_protectPlugin() {}


omniObjRef*
_pof_protectPlugin::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_protectPlugin(ior, id);
}


::CORBA::Boolean
_pof_protectPlugin::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::protectPlugin::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, OpenHRP::Plugin::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, OpenHRP::CommandReceiver::_PD_repoId) )
    return 1;


  return 0;
}

const _pof_protectPlugin _the_pof_protectPlugin;

_impl_protectPlugin::~_impl_protectPlugin() {}


::CORBA::Boolean
_impl_protectPlugin::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "servoLock") ) {

    _0RL_cd_0821B9905AA697C0_00000000 _call_desc(_0RL_lcfn_0821B9905AA697C0_10000000, "servoLock", 10, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoUnLock") ) {

    _0RL_cd_0821B9905AA697C0_00000000 _call_desc(_0RL_lcfn_0821B9905AA697C0_20000000, "servoUnLock", 12, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "motionCancel") ) {

    _0RL_cd_0821B9905AA697C0_30000000 _call_desc(_0RL_lcfn_0821B9905AA697C0_40000000, "motionCancel", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( OpenHRP__impl_Plugin::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((OpenHRP__impl_Plugin*)this)->
      OpenHRP__impl_Plugin::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
_impl_protectPlugin::_ptrToInterface(const char* id)
{
  if( id == ::protectPlugin::_PD_repoId )
    return (::_impl_protectPlugin*) this;
  if( id == ::OpenHRP::Plugin::_PD_repoId )
    return (::OpenHRP::_impl_Plugin*) this;

  if( id == ::OpenHRP::CommandReceiver::_PD_repoId )
    return (::OpenHRP::_impl_CommandReceiver*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::protectPlugin::_PD_repoId) )
    return (::_impl_protectPlugin*) this;
  if( omni::strMatch(id, ::OpenHRP::Plugin::_PD_repoId) )
    return (::OpenHRP::_impl_Plugin*) this;

  if( omni::strMatch(id, ::OpenHRP::CommandReceiver::_PD_repoId) )
    return (::OpenHRP::_impl_CommandReceiver*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_protectPlugin::_mostDerivedRepoId()
{
  return ::protectPlugin::_PD_repoId;
}

POA_protectPlugin::~POA_protectPlugin() {}

