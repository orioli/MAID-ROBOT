// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "coordServer.hpp"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



const ::CORBA::Octet coordServer::WorldCS _init_in_cldef_( = 0 );

const ::CORBA::Octet coordServer::FrontCS _init_in_cldef_( = 1 );

const ::CORBA::Octet coordServer::RWristCS _init_in_cldef_( = 2 );

const ::CORBA::Octet coordServer::LWristCS _init_in_cldef_( = 3 );

const ::CORBA::Octet coordServer::NeckCS _init_in_cldef_( = 4 );

const ::CORBA::Octet coordServer::RHand0 _init_in_cldef_( = 16 );

const ::CORBA::Octet coordServer::RHand1 _init_in_cldef_( = 17 );

const ::CORBA::Octet coordServer::RHand2 _init_in_cldef_( = 18 );

const ::CORBA::Octet coordServer::RHand3 _init_in_cldef_( = 19 );

const ::CORBA::Octet coordServer::RHand4 _init_in_cldef_( = 20 );

const ::CORBA::Octet coordServer::RHand5 _init_in_cldef_( = 21 );

const ::CORBA::Octet coordServer::RHand6 _init_in_cldef_( = 22 );

const ::CORBA::Octet coordServer::RHand7 _init_in_cldef_( = 23 );

const ::CORBA::Octet coordServer::LHand0 _init_in_cldef_( = 24 );

const ::CORBA::Octet coordServer::LHand1 _init_in_cldef_( = 25 );

const ::CORBA::Octet coordServer::LHand2 _init_in_cldef_( = 26 );

const ::CORBA::Octet coordServer::LHand3 _init_in_cldef_( = 27 );

const ::CORBA::Octet coordServer::LHand4 _init_in_cldef_( = 28 );

const ::CORBA::Octet coordServer::LHand5 _init_in_cldef_( = 29 );

const ::CORBA::Octet coordServer::LHand6 _init_in_cldef_( = 30 );

const ::CORBA::Octet coordServer::LHand7 _init_in_cldef_( = 31 );

const ::CORBA::Octet coordServer::NeckCam0 _init_in_cldef_( = 32 );

const ::CORBA::Octet coordServer::NeckCam1 _init_in_cldef_( = 33 );

const ::CORBA::Octet coordServer::NeckCam2 _init_in_cldef_( = 34 );

const ::CORBA::Octet coordServer::NeckCam3 _init_in_cldef_( = 35 );

const ::CORBA::Octet coordServer::NeckCam4 _init_in_cldef_( = 36 );

const ::CORBA::Octet coordServer::NeckCam5 _init_in_cldef_( = 37 );

const ::CORBA::Octet coordServer::NeckCam6 _init_in_cldef_( = 38 );

const ::CORBA::Octet coordServer::NeckCam7 _init_in_cldef_( = 39 );

const ::CORBA::Octet coordServer::ChestCam0 _init_in_cldef_( = 40 );

const ::CORBA::Octet coordServer::ChestCam1 _init_in_cldef_( = 41 );

const ::CORBA::Octet coordServer::ChestCam2 _init_in_cldef_( = 42 );

const ::CORBA::Octet coordServer::ChestCam3 _init_in_cldef_( = 43 );

const ::CORBA::Octet coordServer::ChestCam4 _init_in_cldef_( = 44 );

const ::CORBA::Octet coordServer::ChestCam5 _init_in_cldef_( = 45 );

const ::CORBA::Octet coordServer::ChestCam6 _init_in_cldef_( = 46 );

const ::CORBA::Octet coordServer::ChestCam7 _init_in_cldef_( = 47 );

const ::CORBA::Octet coordServer::NECK _init_in_cldef_( = 1 );

const ::CORBA::Octet coordServer::CHEST _init_in_cldef_( = 2 );

const ::CORBA::Octet coordServer::RIGHT_ARM _init_in_cldef_( = 4 );

const ::CORBA::Octet coordServer::LEFT_ARM _init_in_cldef_( = 8 );

const ::CORBA::ULong coordServer::InitializationStage _init_in_cldef_( = 1U );

const ::CORBA::ULong coordServer::BusyError _init_in_cldef_( = 2U );

const ::CORBA::ULong coordServer::SpeedSpecifyError _init_in_cldef_( = 4U );

const ::CORBA::ULong coordServer::SpeedChangedWarning _init_in_cldef_( = 8U );

const ::CORBA::ULong coordServer::InterpolatorInitError _init_in_cldef_( = 16U );

const ::CORBA::ULong coordServer::SplinePathLengthTooLong _init_in_cldef_( = 32U );

const ::CORBA::ULong coordServer::SplineCalculationError _init_in_cldef_( = 64U );

const ::CORBA::ULong coordServer::IKErrorRight _init_in_cldef_( = 256U );

const ::CORBA::ULong coordServer::WristCollisionErrorRight _init_in_cldef_( = 512U );

const ::CORBA::ULong coordServer::IKErrorLeft _init_in_cldef_( = 1024U );

const ::CORBA::ULong coordServer::WristCollisionErrorLeft _init_in_cldef_( = 2048U );

const ::CORBA::ULong coordServer::EndPointCollisionError _init_in_cldef_( = 4096U );

const ::CORBA::ULong coordServer::JointAngleLimitErrorRight _init_in_cldef_( = 8192U );

const ::CORBA::ULong coordServer::JointAngleLimitErrorLeft _init_in_cldef_( = 16384U );

const ::CORBA::ULong coordServer::JointAngleLimitErrorChest _init_in_cldef_( = 32768U );

const ::CORBA::ULong coordServer::JointAngleLimitErrorNeck _init_in_cldef_( = 65536U );

const ::CORBA::ULong coordServer::WristSynchronizationError _init_in_cldef_( = 131072U );

const ::CORBA::ULong coordServer::MaxInterpolationTimeExceeded _init_in_cldef_( = 262144U );

const ::CORBA::ULong coordServer::RotationMatrixError _init_in_cldef_( = 524288U );

const ::CORBA::ULong coordServer::ProtectiveStopState _init_in_cldef_( = 8388608U );

const ::CORBA::ULong coordServer::ServoEmergency _init_in_cldef_( = 16777216U );

const ::CORBA::ULong coordServer::InterruptedRightArm _init_in_cldef_( = 268435456U );

const ::CORBA::ULong coordServer::InterruptedLeftArm _init_in_cldef_( = 536870912U );

const ::CORBA::ULong coordServer::InterruptedNeck _init_in_cldef_( = 1073741824U );

const ::CORBA::ULong coordServer::InterruptedChest _init_in_cldef_( = 2147483648U );

const ::CORBA::LongLong coordServer::JointCY _init_in_cldef_( = _CORBA_LONGLONG_CONST(1) );

const ::CORBA::LongLong coordServer::JointNY _init_in_cldef_( = _CORBA_LONGLONG_CONST(2) );

const ::CORBA::LongLong coordServer::JointNP _init_in_cldef_( = _CORBA_LONGLONG_CONST(4) );

const ::CORBA::LongLong coordServer::JointRSY _init_in_cldef_( = _CORBA_LONGLONG_CONST(8) );

const ::CORBA::LongLong coordServer::JointRSP _init_in_cldef_( = _CORBA_LONGLONG_CONST(16) );

const ::CORBA::LongLong coordServer::JointREP _init_in_cldef_( = _CORBA_LONGLONG_CONST(32) );

const ::CORBA::LongLong coordServer::JointRWY _init_in_cldef_( = _CORBA_LONGLONG_CONST(64) );

const ::CORBA::LongLong coordServer::JointRWP _init_in_cldef_( = _CORBA_LONGLONG_CONST(128) );

const ::CORBA::LongLong coordServer::JointRWR _init_in_cldef_( = _CORBA_LONGLONG_CONST(256) );

const ::CORBA::LongLong coordServer::JointLSY _init_in_cldef_( = _CORBA_LONGLONG_CONST(512) );

const ::CORBA::LongLong coordServer::JointLSP _init_in_cldef_( = _CORBA_LONGLONG_CONST(1024) );

const ::CORBA::LongLong coordServer::JointLEP _init_in_cldef_( = _CORBA_LONGLONG_CONST(2048) );

const ::CORBA::LongLong coordServer::JointLWY _init_in_cldef_( = _CORBA_LONGLONG_CONST(4096) );

const ::CORBA::LongLong coordServer::JointLWP _init_in_cldef_( = _CORBA_LONGLONG_CONST(8192) );

const ::CORBA::LongLong coordServer::JointLWR _init_in_cldef_( = _CORBA_LONGLONG_CONST(16384) );

const char * coordServer::versionStringIDL = "";

const char * coordServer::versionDateIDL = "";

coordServer_ptr coordServer_Helper::_nil() {
  return ::coordServer::_nil();
}

::CORBA::Boolean coordServer_Helper::is_nil(::coordServer_ptr p) {
  return ::CORBA::is_nil(p);

}

void coordServer_Helper::release(::coordServer_ptr p) {
  ::CORBA::release(p);
}

void coordServer_Helper::marshalObjRef(::coordServer_ptr obj, cdrStream& s) {
  ::coordServer::_marshalObjRef(obj, s);
}

coordServer_ptr coordServer_Helper::unmarshalObjRef(cdrStream& s) {
  return ::coordServer::_unmarshalObjRef(s);
}

void coordServer_Helper::duplicate(::coordServer_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

coordServer_ptr
coordServer::_duplicate(::coordServer_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

coordServer_ptr
coordServer::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


coordServer_ptr
coordServer::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

coordServer_ptr
coordServer::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_coordServer _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_coordServer* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_coordServer;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* coordServer::_PD_repoId = "IDL:coordServer:1.0";


_objref_coordServer::~_objref_coordServer() {
  
}


_objref_coordServer::_objref_coordServer(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::coordServer::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_coordServer::_ptrToObjRef(const char* id)
{
  if( id == ::coordServer::_PD_repoId )
    return (::coordServer_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::coordServer::_PD_repoId) )
    return (::coordServer_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_coctet_i_cstring_i_coctet_i_a6_cdouble_i_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::Octet arg_2;
  coordServer::Position arg_3_;
  const coordServer::Position_slice* arg_3;
  ::CORBA::ULong arg_4;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  _n.marshalString(arg_1,0);
  _n.marshalOctet(arg_2);

#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_3),48,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 48);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 6; _0i0++){
      arg_3[_0i0] >>= _n;
    }
  }
  arg_4 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2 = _n.unmarshalOctet();
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_3_), 6);
  arg_3 = &arg_3_[0];
  (::CORBA::ULong&)arg_4 <<= _n;

}

void _0RL_cd_4A0AA04586D91891_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_4A0AA04586D91891_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_00000000* tcd = (_0RL_cd_4A0AA04586D91891_00000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->setCS(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4);


}

::CORBA::Boolean _objref_coordServer::setCS(::CORBA::Octet cs_no, const char* cs_name, ::CORBA::Octet base_cs_no, const coordServer::Position cs_position, ::CORBA::ULong pass_no)
{
  _0RL_cd_4A0AA04586D91891_00000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_10000000, "setCS", 6);
  _call_desc.arg_0 = cs_no;
  _call_desc.arg_1 = cs_name;
  _call_desc.arg_2 = base_cs_no;
  _call_desc.arg_3 = &cs_position[0];
  _call_desc.arg_4 = pass_no;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_coctet_o_cstring_o_coctet_o_a6_cdouble_o_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::String_var arg_1;
  ::CORBA::Octet arg_2;
  coordServer::Position arg_3_;
  coordServer::Position_slice* arg_3;
  ::CORBA::ULong arg_4;
};

void _0RL_cd_4A0AA04586D91891_20000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);

}

void _0RL_cd_4A0AA04586D91891_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();

}

void _0RL_cd_4A0AA04586D91891_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(arg_1,0);
  _n.marshalOctet(arg_2);

#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_3),48,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 48);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 6; _0i0++){
      arg_3[_0i0] >>= _n;
    }
  }
  arg_4 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_1 = _n.unmarshalString(0);
  arg_2 = _n.unmarshalOctet();
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_3), 6);
  (::CORBA::ULong&)arg_4 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_20000000* tcd = (_0RL_cd_4A0AA04586D91891_20000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->getCS(tcd->arg_0, tcd->arg_1.out(), tcd->arg_2, tcd->arg_3, tcd->arg_4);


}

void _objref_coordServer::getCS(::CORBA::Octet cs_no, ::CORBA::String_out cs_name, ::CORBA::Octet& base_cs_no, coordServer::Position cs_position, ::CORBA::ULong& pass_no)
{
  _0RL_cd_4A0AA04586D91891_20000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_30000000, "getCS", 6);
  _call_desc.arg_0 = cs_no;
  _call_desc.arg_3 = &cs_position[0];

  _invoke(_call_desc);
  cs_name = _call_desc.arg_1._retn();
  base_cs_no = _call_desc.arg_2;
  pass_no = _call_desc.arg_4;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_coctet_i_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::ULong arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_40000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  arg_1 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_40000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  (::CORBA::ULong&)arg_1 <<= _n;

}

void _0RL_cd_4A0AA04586D91891_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_4A0AA04586D91891_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_40000000* tcd = (_0RL_cd_4A0AA04586D91891_40000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->delCS(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean _objref_coordServer::delCS(::CORBA::Octet cs_no, ::CORBA::ULong pass_no)
{
  _0RL_cd_4A0AA04586D91891_40000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_50000000, "delCS", 6);
  _call_desc.arg_0 = cs_no;
  _call_desc.arg_1 = pass_no;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_coctet_i_cunsigned_plong_i_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_60000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::ULong arg_1;
  ::CORBA::ULong arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_60000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_60000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  (::CORBA::ULong&)arg_1 <<= _n;
  (::CORBA::ULong&)arg_2 <<= _n;

}

void _0RL_cd_4A0AA04586D91891_60000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_4A0AA04586D91891_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_60000000* tcd = (_0RL_cd_4A0AA04586D91891_60000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->setPassNo(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::Boolean _objref_coordServer::setPassNo(::CORBA::Octet cs_no, ::CORBA::ULong old_pass_no, ::CORBA::ULong new_pass_no)
{
  _0RL_cd_4A0AA04586D91891_60000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_70000000, "setPassNo", 10);
  _call_desc.arg_0 = cs_no;
  _call_desc.arg_1 = old_pass_no;
  _call_desc.arg_2 = new_pass_no;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_coctet_i_coctet_i_a6_cdouble_i_coctet_i_cdouble_o_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_80000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::Octet arg_1;
  coordServer::Position arg_2_;
  const coordServer::Position_slice* arg_2;
  ::CORBA::Octet arg_3;
  ::CORBA::Double arg_4;
  ::CORBA::ULong arg_5;
  ::CORBA::Double result;
};

void _0RL_cd_4A0AA04586D91891_80000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  _n.marshalOctet(arg_1);

#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_2),48,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 48);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 6; _0i0++){
      arg_2[_0i0] >>= _n;
    }
  }
  _n.marshalOctet(arg_3);
  arg_4 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_80000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  arg_1 = _n.unmarshalOctet();
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_2_), 6);
  arg_2 = &arg_2_[0];
  arg_3 = _n.unmarshalOctet();
  (::CORBA::Double&)arg_4 <<= _n;

}

void _0RL_cd_4A0AA04586D91891_80000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_5 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_5 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_80000000* tcd = (_0RL_cd_4A0AA04586D91891_80000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->moveTarget(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

::CORBA::Double _objref_coordServer::moveTarget(::CORBA::Octet kind, ::CORBA::Octet base_cs_no, const coordServer::Position pos, ::CORBA::Octet move_cs_no, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_4A0AA04586D91891_80000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_90000000, "moveTarget", 11);
  _call_desc.arg_0 = kind;
  _call_desc.arg_1 = base_cs_no;
  _call_desc.arg_2 = &pos[0];
  _call_desc.arg_3 = move_cs_no;
  _call_desc.arg_4 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_5;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_ccoordServer_mcs__Nums_i_ccoordServer_mCoordSequence_i_coctet_i_cdouble_o_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_a0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  coordServer::cs_Nums_var arg_0_;
  const coordServer::cs_Nums* arg_0;
  coordServer::CoordSequence_var arg_1_;
  const coordServer::CoordSequence* arg_1;
  ::CORBA::Octet arg_2;
  ::CORBA::Double arg_3;
  ::CORBA::ULong arg_4;
  ::CORBA::Double result;
};

void _0RL_cd_4A0AA04586D91891_a0000000::marshalArguments(cdrStream& _n)
{
  (const coordServer::cs_Nums&) *arg_0 >>= _n;
  (const coordServer::CoordSequence&) *arg_1 >>= _n;
  _n.marshalOctet(arg_2);
  arg_3 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_a0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new coordServer::cs_Nums;
  (coordServer::cs_Nums&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  arg_1_ = new coordServer::CoordSequence;
  (coordServer::CoordSequence&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();
  arg_2 = _n.unmarshalOctet();
  (::CORBA::Double&)arg_3 <<= _n;

}

void _0RL_cd_4A0AA04586D91891_a0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_4 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_4 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_a0000000* tcd = (_0RL_cd_4A0AA04586D91891_a0000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->movePatern(*tcd->arg_0, *tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4);


}

::CORBA::Double _objref_coordServer::movePatern(const coordServer::cs_Nums& csnums, const coordServer::CoordSequence& coord_sequence, ::CORBA::Octet move_cs_no, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_4A0AA04586D91891_a0000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_b0000000, "movePatern", 11);
  _call_desc.arg_0 = &(coordServer::cs_Nums&) csnums;
  _call_desc.arg_1 = &(coordServer::CoordSequence&) coord_sequence;
  _call_desc.arg_2 = move_cs_no;
  _call_desc.arg_3 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_4;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_coctet_i_a6_cdouble_i_coctet_i_coctet_o_a6_cdouble
class _0RL_cd_4A0AA04586D91891_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_c0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  coordServer::Position arg_1_;
  const coordServer::Position_slice* arg_1;
  ::CORBA::Octet arg_2;
  ::CORBA::Octet arg_3;
  coordServer::Position arg_4_;
  coordServer::Position_slice* arg_4;
};

void _0RL_cd_4A0AA04586D91891_c0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);

#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_1),48,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 48);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 6; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }
  _n.marshalOctet(arg_2);
  _n.marshalOctet(arg_3);

}

void _0RL_cd_4A0AA04586D91891_c0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_1_), 6);
  arg_1 = &arg_1_[0];
  arg_2 = _n.unmarshalOctet();
  arg_3 = _n.unmarshalOctet();

}

void _0RL_cd_4A0AA04586D91891_c0000000::marshalReturnedValues(cdrStream& _n)
{
  
#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_4),48,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 48);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 6; _0i0++){
      arg_4[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_4A0AA04586D91891_c0000000::unmarshalReturnedValues(cdrStream& _n)
{
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_4), 6);

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_c0000000* tcd = (_0RL_cd_4A0AA04586D91891_c0000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->getTarget(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4);


}

void _objref_coordServer::getTarget(::CORBA::Octet base_cs_no, const coordServer::Position offset_pos, ::CORBA::Octet target_cs_no, ::CORBA::Octet kind, coordServer::Position pos)
{
  _0RL_cd_4A0AA04586D91891_c0000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_d0000000, "getTarget", 10);
  _call_desc.arg_0 = base_cs_no;
  _call_desc.arg_1 = &offset_pos[0];
  _call_desc.arg_2 = target_cs_no;
  _call_desc.arg_3 = kind;
  _call_desc.arg_4 = &pos[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_coctet_i_ccoordServer_mJointAngles_i_cdouble_o_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_e0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_e0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  coordServer::JointAngles_var arg_1_;
  const coordServer::JointAngles* arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::ULong arg_3;
  ::CORBA::Double result;
};

void _0RL_cd_4A0AA04586D91891_e0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  (const coordServer::JointAngles&) *arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_e0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  arg_1_ = new coordServer::JointAngles;
  (coordServer::JointAngles&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();
  (::CORBA::Double&)arg_2 <<= _n;

}

void _0RL_cd_4A0AA04586D91891_e0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_3 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_e0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_3 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_e0000000* tcd = (_0RL_cd_4A0AA04586D91891_e0000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->setJointAngles(tcd->arg_0, *tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Double _objref_coordServer::setJointAngles(::CORBA::Octet part, const coordServer::JointAngles& joint_angles, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_4A0AA04586D91891_e0000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_f0000000, "setJointAngles", 15);
  _call_desc.arg_0 = part;
  _call_desc.arg_1 = &(coordServer::JointAngles&) joint_angles;
  _call_desc.arg_2 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_coctet_i_coctet_o_ccoordServer_mJointAngles
class _0RL_cd_4A0AA04586D91891_01000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_01000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::Octet arg_1;
  coordServer::JointAngles_var arg_2;
};

void _0RL_cd_4A0AA04586D91891_01000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  _n.marshalOctet(arg_1);

}

void _0RL_cd_4A0AA04586D91891_01000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  arg_1 = _n.unmarshalOctet();

}

void _0RL_cd_4A0AA04586D91891_01000000::marshalReturnedValues(cdrStream& _n)
{
  (const coordServer::JointAngles&) arg_2 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_01000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_2 = new coordServer::JointAngles;
  (coordServer::JointAngles&)arg_2 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_11000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_01000000* tcd = (_0RL_cd_4A0AA04586D91891_01000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->getJointAngles(tcd->arg_0, tcd->arg_1, tcd->arg_2.out());


}

void _objref_coordServer::getJointAngles(::CORBA::Octet part, ::CORBA::Octet kind, coordServer::JointAngles_out joint_angles)
{
  _0RL_cd_4A0AA04586D91891_01000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_11000000, "getJointAngles", 15);
  _call_desc.arg_0 = part;
  _call_desc.arg_1 = kind;

  _invoke(_call_desc);
  joint_angles = _call_desc.arg_2._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plong
class _0RL_cd_4A0AA04586D91891_21000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_21000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::ULong result;
};

void _0RL_cd_4A0AA04586D91891_21000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_4A0AA04586D91891_21000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULong&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_21000000* tcd = (_0RL_cd_4A0AA04586D91891_21000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->getStatus();


}

::CORBA::ULong _objref_coordServer::getStatus()
{
  _0RL_cd_4A0AA04586D91891_21000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_31000000, "getStatus", 10);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_ccoordServer_mLngLngSeq_i_a15_cfloat_i_a15_cboolean_o_cunsigned_plong
class _0RL_cd_4A0AA04586D91891_41000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_41000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  coordServer::LngLngSeq_var arg_0_;
  const coordServer::LngLngSeq* arg_0;
  coordServer::FltArray15 arg_1_;
  const coordServer::FltArray15_slice* arg_1;
  coordServer::BolArray15 arg_2_;
  const coordServer::BolArray15_slice* arg_2;
  ::CORBA::ULong arg_3;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_41000000::marshalArguments(cdrStream& _n)
{
  (const coordServer::LngLngSeq&) *arg_0 >>= _n;
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Float*)arg_1),60,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 60);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 15; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }

#if !defined(HAS_Cplusplus_Bool) || (SIZEOF_BOOL == 1)
  _n.put_octet_array((_CORBA_Octet*)((::CORBA::Boolean*)arg_2),15);
#else
  {
    _n.declareArrayLength(omni::ALIGN_1, 15);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 15; _0i0++){
      _n.marshalBoolean(arg_2[_0i0]);
    }
  }
#endif

}

void _0RL_cd_4A0AA04586D91891_41000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new coordServer::LngLngSeq;
  (coordServer::LngLngSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  _n.unmarshalArrayFloat((_CORBA_Float*)((::CORBA::Float*)arg_1_), 15);
  arg_1 = &arg_1_[0];
  _n.unmarshalArrayBoolean((_CORBA_Boolean*)((::CORBA::Boolean*)arg_2_), 15);
  arg_2 = &arg_2_[0];

}

void _0RL_cd_4A0AA04586D91891_41000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  arg_3 >>= _n;

}

void _0RL_cd_4A0AA04586D91891_41000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (::CORBA::ULong&)arg_3 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_51000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_41000000* tcd = (_0RL_cd_4A0AA04586D91891_41000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->jointCalibration(*tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Boolean _objref_coordServer::jointCalibration(const coordServer::LngLngSeq& seq, const coordServer::FltArray15 angles, const coordServer::BolArray15 rot, ::CORBA::ULong& status)
{
  _0RL_cd_4A0AA04586D91891_41000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_51000000, "jointCalibration", 17);
  _call_desc.arg_0 = &(coordServer::LngLngSeq&) seq;
  _call_desc.arg_1 = &angles[0];
  _call_desc.arg_2 = &rot[0];

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_4A0AA04586D91891_61000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_61000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_61000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_4A0AA04586D91891_61000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_71000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_61000000* tcd = (_0RL_cd_4A0AA04586D91891_61000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->checkCalibration();


}

::CORBA::Boolean _objref_coordServer::checkCalibration()
{
  _0RL_cd_4A0AA04586D91891_61000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_71000000, "checkCalibration", 17);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cboolean
class _0RL_cd_4A0AA04586D91891_81000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_81000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Boolean arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_81000000::marshalArguments(cdrStream& _n)
{
  _n.marshalBoolean(arg_0);

}

void _0RL_cd_4A0AA04586D91891_81000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalBoolean();

}

void _0RL_cd_4A0AA04586D91891_81000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_4A0AA04586D91891_81000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_91000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_81000000* tcd = (_0RL_cd_4A0AA04586D91891_81000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->switchServo(tcd->arg_0);


}

::CORBA::Boolean _objref_coordServer::switchServo(::CORBA::Boolean t)
{
  _0RL_cd_4A0AA04586D91891_81000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_91000000, "switchServo", 12);
  _call_desc.arg_0 = t;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_o_a15_clonglong
class _0RL_cd_4A0AA04586D91891_a1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_a1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  coordServer::LngArray15 arg_0_;
  coordServer::LngArray15_slice* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_a1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::LongLong*)arg_0),120,omni::ALIGN_8);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_8, 120);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 15; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_4A0AA04586D91891_a1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  _n.unmarshalArrayLongLong((_CORBA_LongLong*)((::CORBA::LongLong*)arg_0), 15);

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_b1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_a1000000* tcd = (_0RL_cd_4A0AA04586D91891_a1000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->getServoStatus(tcd->arg_0);


}

::CORBA::Boolean _objref_coordServer::getServoStatus(coordServer::LngArray15 status)
{
  _0RL_cd_4A0AA04586D91891_a1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_b1000000, "getServoStatus", 15);
  _call_desc.arg_0 = &status[0];

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_a4_clong_o_a4_clong
class _0RL_cd_4A0AA04586D91891_c1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_c1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  coordServer::LngArray4 arg_0_;
  const coordServer::LngArray4_slice* arg_0;
  coordServer::LngArray4 arg_1_;
  coordServer::LngArray4_slice* arg_1;
};

void _0RL_cd_4A0AA04586D91891_c1000000::marshalArguments(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Long*)arg_0),16,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 16);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 4; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_4A0AA04586D91891_c1000000::unmarshalArguments(cdrStream& _n)
{
  _n.unmarshalArrayLong((_CORBA_Long*)((::CORBA::Long*)arg_0_), 4);
  arg_0 = &arg_0_[0];

}

void _0RL_cd_4A0AA04586D91891_c1000000::marshalReturnedValues(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Long*)arg_1),16,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 16);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 4; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_4A0AA04586D91891_c1000000::unmarshalReturnedValues(cdrStream& _n)
{
  _n.unmarshalArrayLong((_CORBA_Long*)((::CORBA::Long*)arg_1), 4);

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_d1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_c1000000* tcd = (_0RL_cd_4A0AA04586D91891_c1000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->protectiveStop(tcd->arg_0, tcd->arg_1);


}

void _objref_coordServer::protectiveStop(const coordServer::LngArray4 inputID, coordServer::LngArray4 outputID)
{
  _0RL_cd_4A0AA04586D91891_c1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_d1000000, "protectiveStop", 15);
  _call_desc.arg_0 = &inputID[0];
  _call_desc.arg_1 = &outputID[0];

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_c1000000* tcd = (_0RL_cd_4A0AA04586D91891_c1000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->exitProtectiveStop(tcd->arg_0, tcd->arg_1);


}

void _objref_coordServer::exitProtectiveStop(const coordServer::LngArray4 inputID, coordServer::LngArray4 outputID)
{
  _0RL_cd_4A0AA04586D91891_c1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_e1000000, "exitProtectiveStop", 19);
  _call_desc.arg_0 = &inputID[0];
  _call_desc.arg_1 = &outputID[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_n_coctet
class _0RL_cd_4A0AA04586D91891_f1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_f1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0_;
  ::CORBA::Octet* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_f1000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_4A0AA04586D91891_f1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalOctet();
  arg_0 = &arg_0_;

}

void _0RL_cd_4A0AA04586D91891_f1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_4A0AA04586D91891_f1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  *arg_0 = _n.unmarshalOctet();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_f1000000* tcd = (_0RL_cd_4A0AA04586D91891_f1000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->motionCancel(*tcd->arg_0);


}

::CORBA::Boolean _objref_coordServer::motionCancel(::CORBA::Octet& part)
{
  _0RL_cd_4A0AA04586D91891_f1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_02000000, "motionCancel", 13);
  _call_desc.arg_0 = &(::CORBA::Octet&) part;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_n_coctet_i_cboolean
class _0RL_cd_4A0AA04586D91891_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_12000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0_;
  ::CORBA::Octet* arg_0;
  ::CORBA::Boolean arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_4A0AA04586D91891_12000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(*arg_0);
  _n.marshalBoolean(arg_1);

}

void _0RL_cd_4A0AA04586D91891_12000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalOctet();
  arg_0 = &arg_0_;
  arg_1 = _n.unmarshalBoolean();

}

void _0RL_cd_4A0AA04586D91891_12000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_4A0AA04586D91891_12000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  *arg_0 = _n.unmarshalOctet();

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_12000000* tcd = (_0RL_cd_4A0AA04586D91891_12000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  tcd->result = impl->inMotion(*tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean _objref_coordServer::inMotion(::CORBA::Octet& part, ::CORBA::Boolean wait)
{
  _0RL_cd_4A0AA04586D91891_12000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_22000000, "inMotion", 9);
  _call_desc.arg_0 = &(::CORBA::Octet&) part;
  _call_desc.arg_1 = wait;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cstring_o_cstring
class _0RL_cd_4A0AA04586D91891_32000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_4A0AA04586D91891_32000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0;
  ::CORBA::String_var arg_1;
};

void _0RL_cd_4A0AA04586D91891_32000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_4A0AA04586D91891_32000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_0 = _n.unmarshalString(0);
  arg_1 = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_32000000* tcd = (_0RL_cd_4A0AA04586D91891_32000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->getIDLVersionString(tcd->arg_0.out(), tcd->arg_1.out());


}

void _objref_coordServer::getIDLVersionString(::CORBA::String_out revision, ::CORBA::String_out date)
{
  _0RL_cd_4A0AA04586D91891_32000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_42000000, "getIDLVersionString", 20);


  _invoke(_call_desc);
  revision = _call_desc.arg_0._retn();
  date = _call_desc.arg_1._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_4A0AA04586D91891_52000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_4A0AA04586D91891_32000000* tcd = (_0RL_cd_4A0AA04586D91891_32000000*)cd;
  _impl_coordServer* impl = (_impl_coordServer*) svnt->_ptrToInterface(coordServer::_PD_repoId);
  impl->getSrcVersionString(tcd->arg_0.out(), tcd->arg_1.out());


}

void _objref_coordServer::getSrcVersionString(::CORBA::String_out revision, ::CORBA::String_out date)
{
  _0RL_cd_4A0AA04586D91891_32000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_52000000, "getSrcVersionString", 20);


  _invoke(_call_desc);
  revision = _call_desc.arg_0._retn();
  date = _call_desc.arg_1._retn();


}
_pof_coordServer::~_pof_coordServer() {}


omniObjRef*
_pof_coordServer::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_coordServer(ior, id);
}


::CORBA::Boolean
_pof_coordServer::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::coordServer::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_coordServer _the_pof_coordServer;

_impl_coordServer::~_impl_coordServer() {}


::CORBA::Boolean
_impl_coordServer::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setCS") ) {

    _0RL_cd_4A0AA04586D91891_00000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_10000000, "setCS", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getCS") ) {

    _0RL_cd_4A0AA04586D91891_20000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_30000000, "getCS", 6, 1);
    _call_desc.arg_3 = _call_desc.arg_3_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "delCS") ) {

    _0RL_cd_4A0AA04586D91891_40000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_50000000, "delCS", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setPassNo") ) {

    _0RL_cd_4A0AA04586D91891_60000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_70000000, "setPassNo", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveTarget") ) {

    _0RL_cd_4A0AA04586D91891_80000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_90000000, "moveTarget", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "movePatern") ) {

    _0RL_cd_4A0AA04586D91891_a0000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_b0000000, "movePatern", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getTarget") ) {

    _0RL_cd_4A0AA04586D91891_c0000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_d0000000, "getTarget", 10, 1);
    _call_desc.arg_4 = _call_desc.arg_4_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setJointAngles") ) {

    _0RL_cd_4A0AA04586D91891_e0000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_f0000000, "setJointAngles", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAngles") ) {

    _0RL_cd_4A0AA04586D91891_01000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_11000000, "getJointAngles", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getStatus") ) {

    _0RL_cd_4A0AA04586D91891_21000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_31000000, "getStatus", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "jointCalibration") ) {

    _0RL_cd_4A0AA04586D91891_41000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_51000000, "jointCalibration", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "checkCalibration") ) {

    _0RL_cd_4A0AA04586D91891_61000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_71000000, "checkCalibration", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "switchServo") ) {

    _0RL_cd_4A0AA04586D91891_81000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_91000000, "switchServo", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getServoStatus") ) {

    _0RL_cd_4A0AA04586D91891_a1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_b1000000, "getServoStatus", 15, 1);
    _call_desc.arg_0 = _call_desc.arg_0_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "protectiveStop") ) {

    _0RL_cd_4A0AA04586D91891_c1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_d1000000, "protectiveStop", 15, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "exitProtectiveStop") ) {

    _0RL_cd_4A0AA04586D91891_c1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_e1000000, "exitProtectiveStop", 19, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "motionCancel") ) {

    _0RL_cd_4A0AA04586D91891_f1000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_02000000, "motionCancel", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "inMotion") ) {

    _0RL_cd_4A0AA04586D91891_12000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_22000000, "inMotion", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getIDLVersionString") ) {

    _0RL_cd_4A0AA04586D91891_32000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_42000000, "getIDLVersionString", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSrcVersionString") ) {

    _0RL_cd_4A0AA04586D91891_32000000 _call_desc(_0RL_lcfn_4A0AA04586D91891_52000000, "getSrcVersionString", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_coordServer::_ptrToInterface(const char* id)
{
  if( id == ::coordServer::_PD_repoId )
    return (::_impl_coordServer*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::coordServer::_PD_repoId) )
    return (::_impl_coordServer*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_coordServer::_mostDerivedRepoId()
{
  return ::coordServer::_PD_repoId;
}

POA_coordServer::~POA_coordServer() {}

