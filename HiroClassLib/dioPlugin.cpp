// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "dioPlugin.hpp"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



const ::CORBA::ULong dioPlugin::DO_OFF _init_in_cldef_( = 0U );

const ::CORBA::ULong dioPlugin::DO_ON _init_in_cldef_( = 4294967295U );

const ::CORBA::Octet dioPlugin::DoutPort33 _init_in_cldef_( = 32 );

const ::CORBA::Octet dioPlugin::DoutPort34 _init_in_cldef_( = 33 );

const ::CORBA::Octet dioPlugin::DoutPort35 _init_in_cldef_( = 34 );

const ::CORBA::Octet dioPlugin::DoutPort36 _init_in_cldef_( = 35 );

const ::CORBA::Octet dioPlugin::DoutPort37 _init_in_cldef_( = 36 );

const ::CORBA::Octet dioPlugin::DoutPort38 _init_in_cldef_( = 37 );

const ::CORBA::Octet dioPlugin::DoutPort39 _init_in_cldef_( = 38 );

const ::CORBA::Octet dioPlugin::DoutPort40 _init_in_cldef_( = 39 );

const ::CORBA::Octet dioPlugin::DoutPort41 _init_in_cldef_( = 40 );

const ::CORBA::Octet dioPlugin::DoutPort42 _init_in_cldef_( = 41 );

const ::CORBA::Octet dioPlugin::DoutPort43 _init_in_cldef_( = 42 );

const ::CORBA::Octet dioPlugin::DoutPort44 _init_in_cldef_( = 43 );

const ::CORBA::Octet dioPlugin::DoutPort45 _init_in_cldef_( = 44 );

const ::CORBA::Octet dioPlugin::DoutPort46 _init_in_cldef_( = 45 );

const ::CORBA::Octet dioPlugin::DoutPort47 _init_in_cldef_( = 46 );

const ::CORBA::Octet dioPlugin::DoutPort48 _init_in_cldef_( = 47 );

const ::CORBA::Octet dioPlugin::DoutPort49 _init_in_cldef_( = 48 );

const ::CORBA::Octet dioPlugin::DoutPort50 _init_in_cldef_( = 49 );

const ::CORBA::Octet dioPlugin::DoutPort51 _init_in_cldef_( = 50 );

const ::CORBA::Octet dioPlugin::DoutPort52 _init_in_cldef_( = 51 );

const ::CORBA::Octet dioPlugin::DoutPort53 _init_in_cldef_( = 52 );

const ::CORBA::Octet dioPlugin::DoutPort54 _init_in_cldef_( = 53 );

const ::CORBA::Octet dioPlugin::DoutPort55 _init_in_cldef_( = 54 );

const ::CORBA::Octet dioPlugin::DoutPort56 _init_in_cldef_( = 55 );

const ::CORBA::Octet dioPlugin::DoutPort57 _init_in_cldef_( = 56 );

const ::CORBA::Octet dioPlugin::DoutPort58 _init_in_cldef_( = 57 );

const ::CORBA::Octet dioPlugin::DoutPort59 _init_in_cldef_( = 58 );

const ::CORBA::Octet dioPlugin::DoutPort60 _init_in_cldef_( = 59 );

const ::CORBA::Octet dioPlugin::DoutPort61 _init_in_cldef_( = 60 );

const ::CORBA::Octet dioPlugin::DoutPort62 _init_in_cldef_( = 61 );

const ::CORBA::Octet dioPlugin::DoutPort63 _init_in_cldef_( = 62 );

const ::CORBA::Octet dioPlugin::DoutPort64 _init_in_cldef_( = 63 );

const ::CORBA::ULongLong dioPlugin::DinPort33 _init_in_cldef_( = _CORBA_LONGLONG_CONST(4294967296U) );

const ::CORBA::ULongLong dioPlugin::DinPort34 _init_in_cldef_( = _CORBA_LONGLONG_CONST(8589934592U) );

const ::CORBA::ULongLong dioPlugin::DinPort35 _init_in_cldef_( = _CORBA_LONGLONG_CONST(17179869184U) );

const ::CORBA::ULongLong dioPlugin::DinPort36 _init_in_cldef_( = _CORBA_LONGLONG_CONST(34359738368U) );

const ::CORBA::ULongLong dioPlugin::DinPort37 _init_in_cldef_( = _CORBA_LONGLONG_CONST(68719476736U) );

const ::CORBA::ULongLong dioPlugin::DinPort38 _init_in_cldef_( = _CORBA_LONGLONG_CONST(137438953472U) );

const ::CORBA::ULongLong dioPlugin::DinPort39 _init_in_cldef_( = _CORBA_LONGLONG_CONST(274877906944U) );

const ::CORBA::ULongLong dioPlugin::DinPort40 _init_in_cldef_( = _CORBA_LONGLONG_CONST(549755813888U) );

const ::CORBA::ULongLong dioPlugin::DinPort41 _init_in_cldef_( = _CORBA_LONGLONG_CONST(1099511627776U) );

const ::CORBA::ULongLong dioPlugin::DinPort42 _init_in_cldef_( = _CORBA_LONGLONG_CONST(2199023255552U) );

const ::CORBA::ULongLong dioPlugin::DinPort43 _init_in_cldef_( = _CORBA_LONGLONG_CONST(4398046511104U) );

const ::CORBA::ULongLong dioPlugin::DinPort44 _init_in_cldef_( = _CORBA_LONGLONG_CONST(8796093022208U) );

const ::CORBA::ULongLong dioPlugin::DinPort45 _init_in_cldef_( = _CORBA_LONGLONG_CONST(17592186044416U) );

const ::CORBA::ULongLong dioPlugin::DinPort46 _init_in_cldef_( = _CORBA_LONGLONG_CONST(35184372088832U) );

const ::CORBA::ULongLong dioPlugin::DinPort47 _init_in_cldef_( = _CORBA_LONGLONG_CONST(70368744177664U) );

const ::CORBA::ULongLong dioPlugin::DinPort48 _init_in_cldef_( = _CORBA_LONGLONG_CONST(140737488355328U) );

const ::CORBA::ULongLong dioPlugin::DinPort49 _init_in_cldef_( = _CORBA_LONGLONG_CONST(281474976710656U) );

const ::CORBA::ULongLong dioPlugin::DinPort50 _init_in_cldef_( = _CORBA_LONGLONG_CONST(562949953421312U) );

const ::CORBA::ULongLong dioPlugin::DinPort51 _init_in_cldef_( = _CORBA_LONGLONG_CONST(1125899906842624U) );

const ::CORBA::ULongLong dioPlugin::DinPort52 _init_in_cldef_( = _CORBA_LONGLONG_CONST(2251799813685248U) );

const ::CORBA::ULongLong dioPlugin::DinPort53 _init_in_cldef_( = _CORBA_LONGLONG_CONST(4503599627370496U) );

const ::CORBA::ULongLong dioPlugin::DinPort54 _init_in_cldef_( = _CORBA_LONGLONG_CONST(9007199254740992U) );

const ::CORBA::ULongLong dioPlugin::DinPort55 _init_in_cldef_( = _CORBA_LONGLONG_CONST(18014398509481984U) );

const ::CORBA::ULongLong dioPlugin::DinPort56 _init_in_cldef_( = _CORBA_LONGLONG_CONST(36028797018963968U) );

const ::CORBA::ULongLong dioPlugin::DinPort57 _init_in_cldef_( = _CORBA_LONGLONG_CONST(72057594037927936U) );

const ::CORBA::ULongLong dioPlugin::DinPort58 _init_in_cldef_( = _CORBA_LONGLONG_CONST(144115188075855872U) );

const ::CORBA::ULongLong dioPlugin::DinPort59 _init_in_cldef_( = _CORBA_LONGLONG_CONST(288230376151711744U) );

const ::CORBA::ULongLong dioPlugin::DinPort60 _init_in_cldef_( = _CORBA_LONGLONG_CONST(576460752303423488U) );

const ::CORBA::ULongLong dioPlugin::DinPort61 _init_in_cldef_( = _CORBA_LONGLONG_CONST(1152921504606846976U) );

const ::CORBA::ULongLong dioPlugin::DinPort62 _init_in_cldef_( = _CORBA_LONGLONG_CONST(2305843009213693952U) );

const ::CORBA::ULongLong dioPlugin::DinPort63 _init_in_cldef_( = _CORBA_LONGLONG_CONST(4611686018427387904U) );

const ::CORBA::ULongLong dioPlugin::DinPort64 _init_in_cldef_( = _CORBA_LONGLONG_CONST(9223372036854775808U) );

const char * dioPlugin::versionStringIDL = "50:405874bb37de";

const char * dioPlugin::versionDateIDL = "Wed Jan 28 16:13:50 2009 +0900";

dioPlugin_ptr dioPlugin_Helper::_nil() {
  return ::dioPlugin::_nil();
}

::CORBA::Boolean dioPlugin_Helper::is_nil(::dioPlugin_ptr p) {
  return ::CORBA::is_nil(p);

}

void dioPlugin_Helper::release(::dioPlugin_ptr p) {
  ::CORBA::release(p);
}

void dioPlugin_Helper::marshalObjRef(::dioPlugin_ptr obj, cdrStream& s) {
  ::dioPlugin::_marshalObjRef(obj, s);
}

dioPlugin_ptr dioPlugin_Helper::unmarshalObjRef(cdrStream& s) {
  return ::dioPlugin::_unmarshalObjRef(s);
}

void dioPlugin_Helper::duplicate(::dioPlugin_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

dioPlugin_ptr
dioPlugin::_duplicate(::dioPlugin_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

dioPlugin_ptr
dioPlugin::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


dioPlugin_ptr
dioPlugin::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

dioPlugin_ptr
dioPlugin::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_dioPlugin _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_dioPlugin* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_dioPlugin;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* dioPlugin::_PD_repoId = "IDL:dioPlugin:1.0";


typedef OpenHRP::Plugin OpenHRP_Plugin;
typedef OpenHRP::_impl_Plugin OpenHRP__impl_Plugin;
typedef OpenHRP::_objref_Plugin OpenHRP__objref_Plugin;

typedef OpenHRP::CommandReceiver OpenHRP_CommandReceiver;
typedef OpenHRP::_impl_CommandReceiver OpenHRP__impl_CommandReceiver;
typedef OpenHRP::_objref_CommandReceiver OpenHRP__objref_CommandReceiver;

_objref_dioPlugin::~_objref_dioPlugin() {
  
}


_objref_dioPlugin::_objref_dioPlugin(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::dioPlugin::_PD_repoId, ior, id, 1),
   OpenHRP__objref_Plugin(ior, id)
   
{
  _PR_setobj(this);
}

void*
_objref_dioPlugin::_ptrToObjRef(const char* id)
{
  if( id == ::dioPlugin::_PD_repoId )
    return (::dioPlugin_ptr) this;
  if( id == ::OpenHRP::Plugin::_PD_repoId )
    return (::OpenHRP::Plugin_ptr) this;

  if( id == ::OpenHRP::CommandReceiver::_PD_repoId )
    return (::OpenHRP::CommandReceiver_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::dioPlugin::_PD_repoId) )
    return (::dioPlugin_ptr) this;
  if( omni::strMatch(id, ::OpenHRP::Plugin::_PD_repoId) )
    return (::OpenHRP::Plugin_ptr) this;

  if( omni::strMatch(id, ::OpenHRP::CommandReceiver::_PD_repoId) )
    return (::OpenHRP::CommandReceiver_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plonglong
class _0RL_cd_0846BDEEA1D8F58D_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0846BDEEA1D8F58D_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::ULongLong result;
};

void _0RL_cd_0846BDEEA1D8F58D_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_0846BDEEA1D8F58D_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULongLong&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_00000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_00000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  tcd->result = impl->getDin();


}

::CORBA::ULongLong _objref_dioPlugin::getDin()
{
  _0RL_cd_0846BDEEA1D8F58D_00000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_10000000, "getDin", 7);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plong_i_coctet
class _0RL_cd_0846BDEEA1D8F58D_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0846BDEEA1D8F58D_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::ULong result;
};

void _0RL_cd_0846BDEEA1D8F58D_20000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);

}

void _0RL_cd_0846BDEEA1D8F58D_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();

}

void _0RL_cd_0846BDEEA1D8F58D_20000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_0846BDEEA1D8F58D_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULong&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_20000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_20000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  tcd->result = impl->getDout(tcd->arg_0);


}

::CORBA::ULong _objref_dioPlugin::getDout(::CORBA::Octet port)
{
  _0RL_cd_0846BDEEA1D8F58D_20000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_30000000, "getDout", 8);
  _call_desc.arg_0 = port;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_00000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_00000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  tcd->result = impl->getDoutAll();


}

::CORBA::ULongLong _objref_dioPlugin::getDoutAll()
{
  _0RL_cd_0846BDEEA1D8F58D_00000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_40000000, "getDoutAll", 11);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_coctet_i_cunsigned_plong
class _0RL_cd_0846BDEEA1D8F58D_50000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0846BDEEA1D8F58D_50000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0;
  ::CORBA::ULong arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_0846BDEEA1D8F58D_50000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(arg_0);
  arg_1 >>= _n;

}

void _0RL_cd_0846BDEEA1D8F58D_50000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalOctet();
  (::CORBA::ULong&)arg_1 <<= _n;

}

void _0RL_cd_0846BDEEA1D8F58D_50000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_0846BDEEA1D8F58D_50000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_50000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_50000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  tcd->result = impl->setDout(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean _objref_dioPlugin::setDout(::CORBA::Octet port, ::CORBA::ULong blinkingCycle)
{
  _0RL_cd_0846BDEEA1D8F58D_50000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_60000000, "setDout", 8);
  _call_desc.arg_0 = port;
  _call_desc.arg_1 = blinkingCycle;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cunsigned_plonglong_i_cunsigned_plonglong
class _0RL_cd_0846BDEEA1D8F58D_70000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0846BDEEA1D8F58D_70000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::ULongLong arg_0;
  ::CORBA::ULongLong arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_0846BDEEA1D8F58D_70000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_0846BDEEA1D8F58D_70000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::ULongLong&)arg_0 <<= _n;
  (::CORBA::ULongLong&)arg_1 <<= _n;

}

void _0RL_cd_0846BDEEA1D8F58D_70000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_0846BDEEA1D8F58D_70000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_70000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_70000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  tcd->result = impl->setDoutAll(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean _objref_dioPlugin::setDoutAll(::CORBA::ULongLong on_ports, ::CORBA::ULongLong off_ports)
{
  _0RL_cd_0846BDEEA1D8F58D_70000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_80000000, "setDoutAll", 11);
  _call_desc.arg_0 = on_ports;
  _call_desc.arg_1 = off_ports;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cstring_o_cstring
class _0RL_cd_0846BDEEA1D8F58D_90000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0846BDEEA1D8F58D_90000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0;
  ::CORBA::String_var arg_1;
};

void _0RL_cd_0846BDEEA1D8F58D_90000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_0846BDEEA1D8F58D_90000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_0 = _n.unmarshalString(0);
  arg_1 = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_90000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_90000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  impl->getIDLVersionString(tcd->arg_0.out(), tcd->arg_1.out());


}

void _objref_dioPlugin::getIDLVersionString(::CORBA::String_out revision, ::CORBA::String_out date)
{
  _0RL_cd_0846BDEEA1D8F58D_90000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_a0000000, "getIDLVersionString", 20);


  _invoke(_call_desc);
  revision = _call_desc.arg_0._retn();
  date = _call_desc.arg_1._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_0846BDEEA1D8F58D_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0846BDEEA1D8F58D_90000000* tcd = (_0RL_cd_0846BDEEA1D8F58D_90000000*)cd;
  _impl_dioPlugin* impl = (_impl_dioPlugin*) svnt->_ptrToInterface(dioPlugin::_PD_repoId);
  impl->getSrcVersionString(tcd->arg_0.out(), tcd->arg_1.out());


}

void _objref_dioPlugin::getSrcVersionString(::CORBA::String_out revision, ::CORBA::String_out date)
{
  _0RL_cd_0846BDEEA1D8F58D_90000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_b0000000, "getSrcVersionString", 20);


  _invoke(_call_desc);
  revision = _call_desc.arg_0._retn();
  date = _call_desc.arg_1._retn();


}
_pof_dioPlugin::~_pof_dioPlugin() {}


omniObjRef*
_pof_dioPlugin::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_dioPlugin(ior, id);
}


::CORBA::Boolean
_pof_dioPlugin::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::dioPlugin::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, OpenHRP::Plugin::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, OpenHRP::CommandReceiver::_PD_repoId) )
    return 1;


  return 0;
}

const _pof_dioPlugin _the_pof_dioPlugin;

_impl_dioPlugin::~_impl_dioPlugin() {}


::CORBA::Boolean
_impl_dioPlugin::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getDin") ) {

    _0RL_cd_0846BDEEA1D8F58D_00000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_10000000, "getDin", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getDout") ) {

    _0RL_cd_0846BDEEA1D8F58D_20000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_30000000, "getDout", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getDoutAll") ) {

    _0RL_cd_0846BDEEA1D8F58D_00000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_40000000, "getDoutAll", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setDout") ) {

    _0RL_cd_0846BDEEA1D8F58D_50000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_60000000, "setDout", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setDoutAll") ) {

    _0RL_cd_0846BDEEA1D8F58D_70000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_80000000, "setDoutAll", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getIDLVersionString") ) {

    _0RL_cd_0846BDEEA1D8F58D_90000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_a0000000, "getIDLVersionString", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSrcVersionString") ) {

    _0RL_cd_0846BDEEA1D8F58D_90000000 _call_desc(_0RL_lcfn_0846BDEEA1D8F58D_b0000000, "getSrcVersionString", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( OpenHRP__impl_Plugin::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((OpenHRP__impl_Plugin*)this)->
      OpenHRP__impl_Plugin::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
_impl_dioPlugin::_ptrToInterface(const char* id)
{
  if( id == ::dioPlugin::_PD_repoId )
    return (::_impl_dioPlugin*) this;
  if( id == ::OpenHRP::Plugin::_PD_repoId )
    return (::OpenHRP::_impl_Plugin*) this;

  if( id == ::OpenHRP::CommandReceiver::_PD_repoId )
    return (::OpenHRP::_impl_CommandReceiver*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::dioPlugin::_PD_repoId) )
    return (::_impl_dioPlugin*) this;
  if( omni::strMatch(id, ::OpenHRP::Plugin::_PD_repoId) )
    return (::OpenHRP::_impl_Plugin*) this;

  if( omni::strMatch(id, ::OpenHRP::CommandReceiver::_PD_repoId) )
    return (::OpenHRP::_impl_CommandReceiver*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_dioPlugin::_mostDerivedRepoId()
{
  return ::dioPlugin::_PD_repoId;
}

POA_dioPlugin::~POA_dioPlugin() {}

