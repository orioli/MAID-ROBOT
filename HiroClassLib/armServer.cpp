// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "armServer.hpp"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



const ::CORBA::ULong armServer::InitializationStage _init_in_cldef_( = 1U );

const ::CORBA::ULong armServer::BusyError _init_in_cldef_( = 2U );

const ::CORBA::ULong armServer::SpeedSpecifyError _init_in_cldef_( = 4U );

const ::CORBA::ULong armServer::SpeedChangedWarning _init_in_cldef_( = 8U );

const ::CORBA::ULong armServer::InterpolatorInitError _init_in_cldef_( = 16U );

const ::CORBA::ULong armServer::SplinePathLengthTooLong _init_in_cldef_( = 32U );

const ::CORBA::ULong armServer::SplineCalculationError _init_in_cldef_( = 64U );

const ::CORBA::ULong armServer::IKErrorRight _init_in_cldef_( = 256U );

const ::CORBA::ULong armServer::WristCollisionErrorRight _init_in_cldef_( = 512U );

const ::CORBA::ULong armServer::IKErrorLeft _init_in_cldef_( = 1024U );

const ::CORBA::ULong armServer::WristCollisionErrorLeft _init_in_cldef_( = 2048U );

const ::CORBA::ULong armServer::EndPointCollisionError _init_in_cldef_( = 4096U );

const ::CORBA::ULong armServer::JointAngleLimitErrorRight _init_in_cldef_( = 8192U );

const ::CORBA::ULong armServer::JointAngleLimitErrorLeft _init_in_cldef_( = 16384U );

const ::CORBA::ULong armServer::JointAngleLimitErrorChest _init_in_cldef_( = 32768U );

const ::CORBA::ULong armServer::JointAngleLimitErrorNeck _init_in_cldef_( = 65536U );

const ::CORBA::ULong armServer::WristSynchronizationError _init_in_cldef_( = 131072U );

const ::CORBA::ULong armServer::MaxInterpolationTimeExceeded _init_in_cldef_( = 262144U );

const ::CORBA::ULong armServer::RotationMatrixError _init_in_cldef_( = 524288U );

const ::CORBA::ULong armServer::ProtectiveStopState _init_in_cldef_( = 8388608U );

const ::CORBA::ULong armServer::ServoEmergency _init_in_cldef_( = 16777216U );

const ::CORBA::ULong armServer::InterruptedRightArm _init_in_cldef_( = 268435456U );

const ::CORBA::ULong armServer::InterruptedLeftArm _init_in_cldef_( = 536870912U );

const ::CORBA::ULong armServer::InterruptedNeck _init_in_cldef_( = 1073741824U );

const ::CORBA::ULong armServer::InterruptedChest _init_in_cldef_( = 2147483648U );

const char * armServer::versionStringIDL = "";

const char * armServer::versionDateIDL = "";

armServer_ptr armServer_Helper::_nil() {
  return ::armServer::_nil();
}

::CORBA::Boolean armServer_Helper::is_nil(::armServer_ptr p) {
  return ::CORBA::is_nil(p);

}

void armServer_Helper::release(::armServer_ptr p) {
  ::CORBA::release(p);
}

void armServer_Helper::marshalObjRef(::armServer_ptr obj, cdrStream& s) {
  ::armServer::_marshalObjRef(obj, s);
}

armServer_ptr armServer_Helper::unmarshalObjRef(cdrStream& s) {
  return ::armServer::_unmarshalObjRef(s);
}

void armServer_Helper::duplicate(::armServer_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

armServer_ptr
armServer::_duplicate(::armServer_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

armServer_ptr
armServer::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


armServer_ptr
armServer::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

armServer_ptr
armServer::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_armServer _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_armServer* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_armServer;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* armServer::_PD_repoId = "IDL:armServer:1.0";


_objref_armServer::~_objref_armServer() {
  
}


_objref_armServer::_objref_armServer(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::armServer::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_armServer::_ptrToObjRef(const char* id)
{
  if( id == ::armServer::_PD_repoId )
    return (::armServer_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::armServer::_PD_repoId) )
    return (::armServer_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plong
class _0RL_cd_45918115931636AF_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::ULong result;
};

void _0RL_cd_45918115931636AF_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_45918115931636AF_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULong&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_00000000* tcd = (_0RL_cd_45918115931636AF_00000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->getStatus();


}

::CORBA::ULong _objref_armServer::getStatus()
{
  _0RL_cd_45918115931636AF_00000000 _call_desc(_0RL_lcfn_45918115931636AF_10000000, "getStatus", 10);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_carmServer_mLngLngSeq_i_a15_cfloat_i_a15_cboolean_o_cunsigned_plong
class _0RL_cd_45918115931636AF_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  armServer::LngLngSeq_var arg_0_;
  const armServer::LngLngSeq* arg_0;
  armServer::FltArray15 arg_1_;
  const armServer::FltArray15_slice* arg_1;
  armServer::BolArray15 arg_2_;
  const armServer::BolArray15_slice* arg_2;
  ::CORBA::ULong arg_3;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_20000000::marshalArguments(cdrStream& _n)
{
  (const armServer::LngLngSeq&) *arg_0 >>= _n;
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Float*)arg_1),60,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 60);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 15; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }

#if !defined(HAS_Cplusplus_Bool) || (SIZEOF_BOOL == 1)
  _n.put_octet_array((_CORBA_Octet*)((::CORBA::Boolean*)arg_2),15);
#else
  {
    _n.declareArrayLength(omni::ALIGN_1, 15);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 15; _0i0++){
      _n.marshalBoolean(arg_2[_0i0]);
    }
  }
#endif

}

void _0RL_cd_45918115931636AF_20000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new armServer::LngLngSeq;
  (armServer::LngLngSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  _n.unmarshalArrayFloat((_CORBA_Float*)((::CORBA::Float*)arg_1_), 15);
  arg_1 = &arg_1_[0];
  _n.unmarshalArrayBoolean((_CORBA_Boolean*)((::CORBA::Boolean*)arg_2_), 15);
  arg_2 = &arg_2_[0];

}

void _0RL_cd_45918115931636AF_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  arg_3 >>= _n;

}

void _0RL_cd_45918115931636AF_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (::CORBA::ULong&)arg_3 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_20000000* tcd = (_0RL_cd_45918115931636AF_20000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->jointCalibration(*tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Boolean _objref_armServer::jointCalibration(const armServer::LngLngSeq& seq, const armServer::FltArray15 angles, const armServer::BolArray15 rot, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_20000000 _call_desc(_0RL_lcfn_45918115931636AF_30000000, "jointCalibration", 17);
  _call_desc.arg_0 = &(armServer::LngLngSeq&) seq;
  _call_desc.arg_1 = &angles[0];
  _call_desc.arg_2 = &rot[0];

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_45918115931636AF_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_45918115931636AF_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_40000000* tcd = (_0RL_cd_45918115931636AF_40000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->checkCalibration();


}

::CORBA::Boolean _objref_armServer::checkCalibration()
{
  _0RL_cd_45918115931636AF_40000000 _call_desc(_0RL_lcfn_45918115931636AF_50000000, "checkCalibration", 17);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cboolean
class _0RL_cd_45918115931636AF_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_60000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Boolean arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_60000000::marshalArguments(cdrStream& _n)
{
  _n.marshalBoolean(arg_0);

}

void _0RL_cd_45918115931636AF_60000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalBoolean();

}

void _0RL_cd_45918115931636AF_60000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_45918115931636AF_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_60000000* tcd = (_0RL_cd_45918115931636AF_60000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->switchServo(tcd->arg_0);


}

::CORBA::Boolean _objref_armServer::switchServo(::CORBA::Boolean t)
{
  _0RL_cd_45918115931636AF_60000000 _call_desc(_0RL_lcfn_45918115931636AF_70000000, "switchServo", 12);
  _call_desc.arg_0 = t;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_o_a15_clonglong
class _0RL_cd_45918115931636AF_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_80000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  armServer::LngArray15 arg_0_;
  armServer::LngArray15_slice* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_80000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::LongLong*)arg_0),120,omni::ALIGN_8);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_8, 120);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 15; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_45918115931636AF_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  _n.unmarshalArrayLongLong((_CORBA_LongLong*)((::CORBA::LongLong*)arg_0), 15);

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_80000000* tcd = (_0RL_cd_45918115931636AF_80000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->getServoStatus(tcd->arg_0);


}

::CORBA::Boolean _objref_armServer::getServoStatus(armServer::LngArray15 status)
{
  _0RL_cd_45918115931636AF_80000000 _call_desc(_0RL_lcfn_45918115931636AF_90000000, "getServoStatus", 15);
  _call_desc.arg_0 = &status[0];

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_a4_clong_o_a4_clong
class _0RL_cd_45918115931636AF_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_a0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  armServer::LngArray4 arg_0_;
  const armServer::LngArray4_slice* arg_0;
  armServer::LngArray4 arg_1_;
  armServer::LngArray4_slice* arg_1;
};

void _0RL_cd_45918115931636AF_a0000000::marshalArguments(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Long*)arg_0),16,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 16);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 4; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_45918115931636AF_a0000000::unmarshalArguments(cdrStream& _n)
{
  _n.unmarshalArrayLong((_CORBA_Long*)((::CORBA::Long*)arg_0_), 4);
  arg_0 = &arg_0_[0];

}

void _0RL_cd_45918115931636AF_a0000000::marshalReturnedValues(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Long*)arg_1),16,omni::ALIGN_4);
  }
  else 
  {
    _n.declareArrayLength(omni::ALIGN_4, 16);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 4; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_45918115931636AF_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  _n.unmarshalArrayLong((_CORBA_Long*)((::CORBA::Long*)arg_1), 4);

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_a0000000* tcd = (_0RL_cd_45918115931636AF_a0000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->protectiveStop(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::protectiveStop(const armServer::LngArray4 inputID, armServer::LngArray4 outputID)
{
  _0RL_cd_45918115931636AF_a0000000 _call_desc(_0RL_lcfn_45918115931636AF_b0000000, "protectiveStop", 15);
  _call_desc.arg_0 = &inputID[0];
  _call_desc.arg_1 = &outputID[0];

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_a0000000* tcd = (_0RL_cd_45918115931636AF_a0000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->exitProtectiveStop(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::exitProtectiveStop(const armServer::LngArray4 inputID, armServer::LngArray4 outputID)
{
  _0RL_cd_45918115931636AF_a0000000 _call_desc(_0RL_lcfn_45918115931636AF_c0000000, "exitProtectiveStop", 19);
  _call_desc.arg_0 = &inputID[0];
  _call_desc.arg_1 = &outputID[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_n_coctet
class _0RL_cd_45918115931636AF_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_d0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0_;
  ::CORBA::Octet* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_d0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_45918115931636AF_d0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalOctet();
  arg_0 = &arg_0_;

}

void _0RL_cd_45918115931636AF_d0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_45918115931636AF_d0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  *arg_0 = _n.unmarshalOctet();

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_d0000000* tcd = (_0RL_cd_45918115931636AF_d0000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->motionCancel(*tcd->arg_0);


}

::CORBA::Boolean _objref_armServer::motionCancel(::CORBA::Octet& part)
{
  _0RL_cd_45918115931636AF_d0000000 _call_desc(_0RL_lcfn_45918115931636AF_e0000000, "motionCancel", 13);
  _call_desc.arg_0 = &(::CORBA::Octet&) part;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plong_i_cdouble_i_cdouble_i_cdouble
class _0RL_cd_45918115931636AF_f0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_f0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::ULong result;
};

void _0RL_cd_45918115931636AF_f0000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_45918115931636AF_f0000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;

}

void _0RL_cd_45918115931636AF_f0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_45918115931636AF_f0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULong&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_f0000000* tcd = (_0RL_cd_45918115931636AF_f0000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setOffsetRightHand(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::ULong _objref_armServer::setOffsetRightHand(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z)
{
  _0RL_cd_45918115931636AF_f0000000 _call_desc(_0RL_lcfn_45918115931636AF_01000000, "setOffsetRightHand", 19);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cdouble_o_cdouble_o_cdouble
class _0RL_cd_45918115931636AF_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_11000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
};

void _0RL_cd_45918115931636AF_11000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_45918115931636AF_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_11000000* tcd = (_0RL_cd_45918115931636AF_11000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getOffsetRightHand(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_armServer::getOffsetRightHand(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z)
{
  _0RL_cd_45918115931636AF_11000000 _call_desc(_0RL_lcfn_45918115931636AF_21000000, "getOffsetRightHand", 19);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_f0000000* tcd = (_0RL_cd_45918115931636AF_f0000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setOffsetLeftHand(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::ULong _objref_armServer::setOffsetLeftHand(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z)
{
  _0RL_cd_45918115931636AF_f0000000 _call_desc(_0RL_lcfn_45918115931636AF_31000000, "setOffsetLeftHand", 18);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_11000000* tcd = (_0RL_cd_45918115931636AF_11000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getOffsetLeftHand(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_armServer::getOffsetLeftHand(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z)
{
  _0RL_cd_45918115931636AF_11000000 _call_desc(_0RL_lcfn_45918115931636AF_41000000, "getOffsetLeftHand", 18);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;


}
// Proxy call descriptor class. Mangled signature:
//  _cunsigned_plong_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble
class _0RL_cd_45918115931636AF_51000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_51000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Double arg_3;
  ::CORBA::Double arg_4;
  ::CORBA::Double arg_5;
  ::CORBA::ULong result;
};

void _0RL_cd_45918115931636AF_51000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;
  arg_5 >>= _n;

}

void _0RL_cd_45918115931636AF_51000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;
  (::CORBA::Double&)arg_3 <<= _n;
  (::CORBA::Double&)arg_4 <<= _n;
  (::CORBA::Double&)arg_5 <<= _n;

}

void _0RL_cd_45918115931636AF_51000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_45918115931636AF_51000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::ULong&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_51000000* tcd = (_0RL_cd_45918115931636AF_51000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setOffsetRightHandEx(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

::CORBA::ULong _objref_armServer::setOffsetRightHandEx(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w)
{
  _0RL_cd_45918115931636AF_51000000 _call_desc(_0RL_lcfn_45918115931636AF_61000000, "setOffsetRightHandEx", 21);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;
  _call_desc.arg_3 = r;
  _call_desc.arg_4 = p;
  _call_desc.arg_5 = w;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble
class _0RL_cd_45918115931636AF_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_71000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Double arg_3;
  ::CORBA::Double arg_4;
  ::CORBA::Double arg_5;
};

void _0RL_cd_45918115931636AF_71000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;
  arg_5 >>= _n;

}

void _0RL_cd_45918115931636AF_71000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;
  (::CORBA::Double&)arg_3 <<= _n;
  (::CORBA::Double&)arg_4 <<= _n;
  (::CORBA::Double&)arg_5 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getOffsetRightHandEx(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getOffsetRightHandEx(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_81000000, "getOffsetRightHandEx", 21);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;
  r = _call_desc.arg_3;
  p = _call_desc.arg_4;
  w = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_91000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_51000000* tcd = (_0RL_cd_45918115931636AF_51000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setOffsetLeftHandEx(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

::CORBA::ULong _objref_armServer::setOffsetLeftHandEx(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w)
{
  _0RL_cd_45918115931636AF_51000000 _call_desc(_0RL_lcfn_45918115931636AF_91000000, "setOffsetLeftHandEx", 20);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;
  _call_desc.arg_3 = r;
  _call_desc.arg_4 = p;
  _call_desc.arg_5 = w;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_a1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getOffsetLeftHandEx(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getOffsetLeftHandEx(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_a1000000, "getOffsetLeftHandEx", 20);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;
  r = _call_desc.arg_3;
  p = _call_desc.arg_4;
  w = _call_desc.arg_5;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_n_coctet_i_cboolean
class _0RL_cd_45918115931636AF_b1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_b1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Octet arg_0_;
  ::CORBA::Octet* arg_0;
  ::CORBA::Boolean arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_b1000000::marshalArguments(cdrStream& _n)
{
  _n.marshalOctet(*arg_0);
  _n.marshalBoolean(arg_1);

}

void _0RL_cd_45918115931636AF_b1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalOctet();
  arg_0 = &arg_0_;
  arg_1 = _n.unmarshalBoolean();

}

void _0RL_cd_45918115931636AF_b1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalOctet(*arg_0);

}

void _0RL_cd_45918115931636AF_b1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  *arg_0 = _n.unmarshalOctet();

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_c1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_b1000000* tcd = (_0RL_cd_45918115931636AF_b1000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->inMotion(*tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean _objref_armServer::inMotion(::CORBA::Octet& part, ::CORBA::Boolean wait)
{
  _0RL_cd_45918115931636AF_b1000000 _call_desc(_0RL_lcfn_45918115931636AF_c1000000, "inMotion", 9);
  _call_desc.arg_0 = &(::CORBA::Octet&) part;
  _call_desc.arg_1 = wait;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_cdouble_i_cdouble_o_cunsigned_plong
class _0RL_cd_45918115931636AF_d1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_d1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::ULong arg_2;
  ::CORBA::Double result;
};

void _0RL_cd_45918115931636AF_d1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_45918115931636AF_d1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;

}

void _0RL_cd_45918115931636AF_d1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_45918115931636AF_d1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_2 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_d1000000* tcd = (_0RL_cd_45918115931636AF_d1000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setAngleChestP(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::Double _objref_armServer::setAngleChestP(::CORBA::Double y, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_d1000000 _call_desc(_0RL_lcfn_45918115931636AF_e1000000, "setAngleChestP", 15);
  _call_desc.arg_0 = y;
  _call_desc.arg_1 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_2;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_cdouble_i_cdouble_i_cdouble_o_cunsigned_plong
class _0RL_cd_45918115931636AF_f1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_f1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::ULong arg_3;
  ::CORBA::Double result;
};

void _0RL_cd_45918115931636AF_f1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_45918115931636AF_f1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;

}

void _0RL_cd_45918115931636AF_f1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_3 >>= _n;

}

void _0RL_cd_45918115931636AF_f1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_3 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_f1000000* tcd = (_0RL_cd_45918115931636AF_f1000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setAnglesNeckP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Double _objref_armServer::setAnglesNeckP(::CORBA::Double y, ::CORBA::Double p, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_f1000000 _call_desc(_0RL_lcfn_45918115931636AF_02000000, "setAnglesNeckP", 15);
  _call_desc.arg_0 = y;
  _call_desc.arg_1 = p;
  _call_desc.arg_2 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_o_cunsigned_plong
class _0RL_cd_45918115931636AF_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_12000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Double arg_3;
  ::CORBA::Double arg_4;
  ::CORBA::Double arg_5;
  ::CORBA::Double arg_6;
  ::CORBA::ULong arg_7;
  ::CORBA::Double result;
};

void _0RL_cd_45918115931636AF_12000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;
  arg_5 >>= _n;
  arg_6 >>= _n;

}

void _0RL_cd_45918115931636AF_12000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;
  (::CORBA::Double&)arg_3 <<= _n;
  (::CORBA::Double&)arg_4 <<= _n;
  (::CORBA::Double&)arg_5 <<= _n;
  (::CORBA::Double&)arg_6 <<= _n;

}

void _0RL_cd_45918115931636AF_12000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_7 >>= _n;

}

void _0RL_cd_45918115931636AF_12000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_7 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_12000000* tcd = (_0RL_cd_45918115931636AF_12000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setJointAnglesRightArmP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7);


}

::CORBA::Double _objref_armServer::setJointAnglesRightArmP(::CORBA::Double j0, ::CORBA::Double j1, ::CORBA::Double j2, ::CORBA::Double j3, ::CORBA::Double j4, ::CORBA::Double j5, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_22000000, "setJointAnglesRightArmP", 24);
  _call_desc.arg_0 = j0;
  _call_desc.arg_1 = j1;
  _call_desc.arg_2 = j2;
  _call_desc.arg_3 = j3;
  _call_desc.arg_4 = j4;
  _call_desc.arg_5 = j5;
  _call_desc.arg_6 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_7;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_32000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_12000000* tcd = (_0RL_cd_45918115931636AF_12000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setJointAnglesLeftArmP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7);


}

::CORBA::Double _objref_armServer::setJointAnglesLeftArmP(::CORBA::Double j0, ::CORBA::Double j1, ::CORBA::Double j2, ::CORBA::Double j3, ::CORBA::Double j4, ::CORBA::Double j5, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_32000000, "setJointAnglesLeftArmP", 23);
  _call_desc.arg_0 = j0;
  _call_desc.arg_1 = j1;
  _call_desc.arg_2 = j2;
  _call_desc.arg_3 = j3;
  _call_desc.arg_4 = j4;
  _call_desc.arg_5 = j5;
  _call_desc.arg_6 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_7;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_12000000* tcd = (_0RL_cd_45918115931636AF_12000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setTargetRightArmP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7);


}

::CORBA::Double _objref_armServer::setTargetRightArmP(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_42000000, "setTargetRightArmP", 19);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;
  _call_desc.arg_3 = r;
  _call_desc.arg_4 = p;
  _call_desc.arg_5 = w;
  _call_desc.arg_6 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_7;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_52000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_12000000* tcd = (_0RL_cd_45918115931636AF_12000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setTargetLeftArmP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7);


}

::CORBA::Double _objref_armServer::setTargetLeftArmP(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_52000000, "setTargetLeftArmP", 18);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;
  _call_desc.arg_3 = r;
  _call_desc.arg_4 = p;
  _call_desc.arg_5 = w;
  _call_desc.arg_6 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_7;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_62000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_12000000* tcd = (_0RL_cd_45918115931636AF_12000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->seqTargetRightArmP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7);


}

::CORBA::Double _objref_armServer::seqTargetRightArmP(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_62000000, "seqTargetRightArmP", 19);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;
  _call_desc.arg_3 = r;
  _call_desc.arg_4 = p;
  _call_desc.arg_5 = w;
  _call_desc.arg_6 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_7;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_72000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_12000000* tcd = (_0RL_cd_45918115931636AF_12000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->seqTargetLeftArmP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7);


}

::CORBA::Double _objref_armServer::seqTargetLeftArmP(::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_72000000, "seqTargetLeftArmP", 18);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = z;
  _call_desc.arg_3 = r;
  _call_desc.arg_4 = p;
  _call_desc.arg_5 = w;
  _call_desc.arg_6 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_7;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_a9_cdouble_i_a3_cdouble_i_cdouble_o_cunsigned_plong
class _0RL_cd_45918115931636AF_82000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_82000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  OpenHRP::DblArray9 arg_0_;
  const OpenHRP::DblArray9_slice* arg_0;
  OpenHRP::DblArray3 arg_1_;
  const OpenHRP::DblArray3_slice* arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::ULong arg_3;
  ::CORBA::Double result;
};

void _0RL_cd_45918115931636AF_82000000::marshalArguments(cdrStream& _n)
{
  
#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_0),72,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 72);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 9; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_1),24,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 24);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 3; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }
  arg_2 >>= _n;

}

void _0RL_cd_45918115931636AF_82000000::unmarshalArguments(cdrStream& _n)
{
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_0_), 9);
  arg_0 = &arg_0_[0];
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_1_), 3);
  arg_1 = &arg_1_[0];
  (::CORBA::Double&)arg_2 <<= _n;

}

void _0RL_cd_45918115931636AF_82000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_3 >>= _n;

}

void _0RL_cd_45918115931636AF_82000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;
  (::CORBA::ULong&)arg_3 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_92000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_82000000* tcd = (_0RL_cd_45918115931636AF_82000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setTargetRightArmMatrixP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Double _objref_armServer::setTargetRightArmMatrixP(const OpenHRP::DblArray9 rotMatrix, const OpenHRP::DblArray3 offset, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_92000000, "setTargetRightArmMatrixP", 25);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];
  _call_desc.arg_2 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_a2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_82000000* tcd = (_0RL_cd_45918115931636AF_82000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->setTargetLeftArmMatrixP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Double _objref_armServer::setTargetLeftArmMatrixP(const OpenHRP::DblArray9 rotMatrix, const OpenHRP::DblArray3 offset, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_a2000000, "setTargetLeftArmMatrixP", 24);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];
  _call_desc.arg_2 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_b2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_82000000* tcd = (_0RL_cd_45918115931636AF_82000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->seqTargetRightArmMatrixP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Double _objref_armServer::seqTargetRightArmMatrixP(const OpenHRP::DblArray9 rotMatrix, const OpenHRP::DblArray3 offset, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_b2000000, "seqTargetRightArmMatrixP", 25);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];
  _call_desc.arg_2 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_c2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_82000000* tcd = (_0RL_cd_45918115931636AF_82000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->seqTargetLeftArmMatrixP(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

::CORBA::Double _objref_armServer::seqTargetLeftArmMatrixP(const OpenHRP::DblArray9 rotMatrix, const OpenHRP::DblArray3 offset, ::CORBA::Double percent, ::CORBA::ULong& status)
{
  _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_c2000000, "seqTargetLeftArmMatrixP", 24);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];
  _call_desc.arg_2 = percent;

  _invoke(_call_desc);
  status = _call_desc.arg_3;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cdouble
class _0RL_cd_45918115931636AF_d2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_d2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
};

void _0RL_cd_45918115931636AF_d2000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_45918115931636AF_d2000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_e2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_d2000000* tcd = (_0RL_cd_45918115931636AF_d2000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAngleChest(tcd->arg_0);


}

void _objref_armServer::getJointAngleChest(::CORBA::Double& y)
{
  _0RL_cd_45918115931636AF_d2000000 _call_desc(_0RL_lcfn_45918115931636AF_e2000000, "getJointAngleChest", 19);


  _invoke(_call_desc);
  y = _call_desc.arg_0;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_f2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_d2000000* tcd = (_0RL_cd_45918115931636AF_d2000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAngleChestReal(tcd->arg_0);


}

void _objref_armServer::getJointAngleChestReal(::CORBA::Double& y)
{
  _0RL_cd_45918115931636AF_d2000000 _call_desc(_0RL_lcfn_45918115931636AF_f2000000, "getJointAngleChestReal", 23);


  _invoke(_call_desc);
  y = _call_desc.arg_0;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_03000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_d2000000* tcd = (_0RL_cd_45918115931636AF_d2000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAngleChestGoal(tcd->arg_0);


}

void _objref_armServer::getJointAngleChestGoal(::CORBA::Double& y)
{
  _0RL_cd_45918115931636AF_d2000000 _call_desc(_0RL_lcfn_45918115931636AF_03000000, "getJointAngleChestGoal", 23);


  _invoke(_call_desc);
  y = _call_desc.arg_0;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cdouble_o_cdouble
class _0RL_cd_45918115931636AF_13000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_13000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
};

void _0RL_cd_45918115931636AF_13000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_45918115931636AF_13000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_23000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_13000000* tcd = (_0RL_cd_45918115931636AF_13000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAnglesNeck(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::getJointAnglesNeck(::CORBA::Double& y, ::CORBA::Double& p)
{
  _0RL_cd_45918115931636AF_13000000 _call_desc(_0RL_lcfn_45918115931636AF_23000000, "getJointAnglesNeck", 19);


  _invoke(_call_desc);
  y = _call_desc.arg_0;
  p = _call_desc.arg_1;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_33000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_13000000* tcd = (_0RL_cd_45918115931636AF_13000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAnglesNeckReal(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::getJointAnglesNeckReal(::CORBA::Double& y, ::CORBA::Double& p)
{
  _0RL_cd_45918115931636AF_13000000 _call_desc(_0RL_lcfn_45918115931636AF_33000000, "getJointAnglesNeckReal", 23);


  _invoke(_call_desc);
  y = _call_desc.arg_0;
  p = _call_desc.arg_1;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_43000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAnglesRightArm(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getJointAnglesRightArm(::CORBA::Double& j00, ::CORBA::Double& j11, ::CORBA::Double& j22, ::CORBA::Double& j33, ::CORBA::Double& j44, ::CORBA::Double& j55)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_43000000, "getJointAnglesRightArm", 23);


  _invoke(_call_desc);
  j00 = _call_desc.arg_0;
  j11 = _call_desc.arg_1;
  j22 = _call_desc.arg_2;
  j33 = _call_desc.arg_3;
  j44 = _call_desc.arg_4;
  j55 = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_53000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAnglesRightArmReal(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getJointAnglesRightArmReal(::CORBA::Double& j00, ::CORBA::Double& j11, ::CORBA::Double& j22, ::CORBA::Double& j33, ::CORBA::Double& j44, ::CORBA::Double& j55)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_53000000, "getJointAnglesRightArmReal", 27);


  _invoke(_call_desc);
  j00 = _call_desc.arg_0;
  j11 = _call_desc.arg_1;
  j22 = _call_desc.arg_2;
  j33 = _call_desc.arg_3;
  j44 = _call_desc.arg_4;
  j55 = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_63000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAnglesLeftArm(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getJointAnglesLeftArm(::CORBA::Double& j00, ::CORBA::Double& j11, ::CORBA::Double& j22, ::CORBA::Double& j33, ::CORBA::Double& j44, ::CORBA::Double& j55)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_63000000, "getJointAnglesLeftArm", 22);


  _invoke(_call_desc);
  j00 = _call_desc.arg_0;
  j11 = _call_desc.arg_1;
  j22 = _call_desc.arg_2;
  j33 = _call_desc.arg_3;
  j44 = _call_desc.arg_4;
  j55 = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_73000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getJointAnglesLeftArmReal(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getJointAnglesLeftArmReal(::CORBA::Double& j00, ::CORBA::Double& j11, ::CORBA::Double& j22, ::CORBA::Double& j33, ::CORBA::Double& j44, ::CORBA::Double& j55)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_73000000, "getJointAnglesLeftArmReal", 26);


  _invoke(_call_desc);
  j00 = _call_desc.arg_0;
  j11 = _call_desc.arg_1;
  j22 = _call_desc.arg_2;
  j33 = _call_desc.arg_3;
  j44 = _call_desc.arg_4;
  j55 = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_83000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionRightArm(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getPositionRightArm(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_83000000, "getPositionRightArm", 20);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;
  r = _call_desc.arg_3;
  p = _call_desc.arg_4;
  w = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_93000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionRightArmReal(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getPositionRightArmReal(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_93000000, "getPositionRightArmReal", 24);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;
  r = _call_desc.arg_3;
  p = _call_desc.arg_4;
  w = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_a3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionLeftArm(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getPositionLeftArm(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_a3000000, "getPositionLeftArm", 19);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;
  r = _call_desc.arg_3;
  p = _call_desc.arg_4;
  w = _call_desc.arg_5;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_b3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_71000000* tcd = (_0RL_cd_45918115931636AF_71000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionLeftArmReal(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

void _objref_armServer::getPositionLeftArmReal(::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_b3000000, "getPositionLeftArmReal", 23);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;
  z = _call_desc.arg_2;
  r = _call_desc.arg_3;
  p = _call_desc.arg_4;
  w = _call_desc.arg_5;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_a9_cdouble_o_a3_cdouble
class _0RL_cd_45918115931636AF_c3000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_c3000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  OpenHRP::DblArray9 arg_0_;
  OpenHRP::DblArray9_slice* arg_0;
  OpenHRP::DblArray3 arg_1_;
  OpenHRP::DblArray3_slice* arg_1;
};

void _0RL_cd_45918115931636AF_c3000000::marshalReturnedValues(cdrStream& _n)
{
  
#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_0),72,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 72);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 9; _0i0++){
      arg_0[_0i0] >>= _n;
    }
  }

#ifndef OMNI_MIXED_ENDIAN_DOUBLE
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((_CORBA_Octet*)((::CORBA::Double*)arg_1),24,omni::ALIGN_8);
  }
  else 
#endif
  {
    _n.declareArrayLength(omni::ALIGN_8, 24);
    for (_CORBA_ULong _0i0 = 0; _0i0 < 3; _0i0++){
      arg_1[_0i0] >>= _n;
    }
  }

}

void _0RL_cd_45918115931636AF_c3000000::unmarshalReturnedValues(cdrStream& _n)
{
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_0), 9);
  _n.unmarshalArrayDouble((_CORBA_Double*)((::CORBA::Double*)arg_1), 3);

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_d3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_c3000000* tcd = (_0RL_cd_45918115931636AF_c3000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionRightArmMatrix(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::getPositionRightArmMatrix(OpenHRP::DblArray9 rotMatrix, OpenHRP::DblArray3 offset)
{
  _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_d3000000, "getPositionRightArmMatrix", 26);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_e3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_c3000000* tcd = (_0RL_cd_45918115931636AF_c3000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionRightArmMatrixReal(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::getPositionRightArmMatrixReal(OpenHRP::DblArray9 rotMatrix, OpenHRP::DblArray3 offset)
{
  _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_e3000000, "getPositionRightArmMatrixReal", 30);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_f3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_c3000000* tcd = (_0RL_cd_45918115931636AF_c3000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionLeftArmMatrix(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::getPositionLeftArmMatrix(OpenHRP::DblArray9 rotMatrix, OpenHRP::DblArray3 offset)
{
  _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_f3000000, "getPositionLeftArmMatrix", 25);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_04000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_c3000000* tcd = (_0RL_cd_45918115931636AF_c3000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getPositionLeftArmMatrixReal(tcd->arg_0, tcd->arg_1);


}

void _objref_armServer::getPositionLeftArmMatrixReal(OpenHRP::DblArray9 rotMatrix, OpenHRP::DblArray3 offset)
{
  _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_04000000, "getPositionLeftArmMatrixReal", 29);
  _call_desc.arg_0 = &rotMatrix[0];
  _call_desc.arg_1 = &offset[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble_n_clong
class _0RL_cd_45918115931636AF_14000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_14000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Double arg_3;
  ::CORBA::Double arg_4;
  ::CORBA::Double arg_5;
  ::CORBA::Double arg_6;
  ::CORBA::Double arg_7;
  ::CORBA::Double arg_8;
  ::CORBA::Double arg_9;
  ::CORBA::Double arg_10;
  ::CORBA::Double arg_11;
  ::CORBA::Double arg_12;
  ::CORBA::Long arg_13_;
  ::CORBA::Long* arg_13;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_14000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;
  arg_5 >>= _n;
  arg_6 >>= _n;
  *arg_13 >>= _n;

}

void _0RL_cd_45918115931636AF_14000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;
  (::CORBA::Double&)arg_3 <<= _n;
  (::CORBA::Double&)arg_4 <<= _n;
  (::CORBA::Double&)arg_5 <<= _n;
  (::CORBA::Double&)arg_6 <<= _n;
  (::CORBA::Long&)arg_13_ <<= _n;
  arg_13 = &arg_13_;

}

void _0RL_cd_45918115931636AF_14000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  arg_7 >>= _n;
  arg_8 >>= _n;
  arg_9 >>= _n;
  arg_10 >>= _n;
  arg_11 >>= _n;
  arg_12 >>= _n;
  *arg_13 >>= _n;

}

void _0RL_cd_45918115931636AF_14000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (::CORBA::Double&)arg_7 <<= _n;
  (::CORBA::Double&)arg_8 <<= _n;
  (::CORBA::Double&)arg_9 <<= _n;
  (::CORBA::Double&)arg_10 <<= _n;
  (::CORBA::Double&)arg_11 <<= _n;
  (::CORBA::Double&)arg_12 <<= _n;
  (::CORBA::Long&)*arg_13 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_24000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_14000000* tcd = (_0RL_cd_45918115931636AF_14000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->jointAnglesFromConfigurationRight(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7, tcd->arg_8, tcd->arg_9, tcd->arg_10, tcd->arg_11, tcd->arg_12, *tcd->arg_13);


}

::CORBA::Boolean _objref_armServer::jointAnglesFromConfigurationRight(::CORBA::Double chest, ::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w, ::CORBA::Double& j00, ::CORBA::Double& j11, ::CORBA::Double& j22, ::CORBA::Double& j33, ::CORBA::Double& j44, ::CORBA::Double& j55, ::CORBA::Long& maxIK)
{
  _0RL_cd_45918115931636AF_14000000 _call_desc(_0RL_lcfn_45918115931636AF_24000000, "jointAnglesFromConfigurationRight", 34);
  _call_desc.arg_0 = chest;
  _call_desc.arg_1 = x;
  _call_desc.arg_2 = y;
  _call_desc.arg_3 = z;
  _call_desc.arg_4 = r;
  _call_desc.arg_5 = p;
  _call_desc.arg_6 = w;
  _call_desc.arg_13 = &(::CORBA::Long&) maxIK;

  _invoke(_call_desc);
  j00 = _call_desc.arg_7;
  j11 = _call_desc.arg_8;
  j22 = _call_desc.arg_9;
  j33 = _call_desc.arg_10;
  j44 = _call_desc.arg_11;
  j55 = _call_desc.arg_12;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_34000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_14000000* tcd = (_0RL_cd_45918115931636AF_14000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->jointAnglesFromConfigurationLeft(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7, tcd->arg_8, tcd->arg_9, tcd->arg_10, tcd->arg_11, tcd->arg_12, *tcd->arg_13);


}

::CORBA::Boolean _objref_armServer::jointAnglesFromConfigurationLeft(::CORBA::Double chest, ::CORBA::Double x, ::CORBA::Double y, ::CORBA::Double z, ::CORBA::Double r, ::CORBA::Double p, ::CORBA::Double w, ::CORBA::Double& j00, ::CORBA::Double& j11, ::CORBA::Double& j22, ::CORBA::Double& j33, ::CORBA::Double& j44, ::CORBA::Double& j55, ::CORBA::Long& maxIK)
{
  _0RL_cd_45918115931636AF_14000000 _call_desc(_0RL_lcfn_45918115931636AF_34000000, "jointAnglesFromConfigurationLeft", 33);
  _call_desc.arg_0 = chest;
  _call_desc.arg_1 = x;
  _call_desc.arg_2 = y;
  _call_desc.arg_3 = z;
  _call_desc.arg_4 = r;
  _call_desc.arg_5 = p;
  _call_desc.arg_6 = w;
  _call_desc.arg_13 = &(::CORBA::Long&) maxIK;

  _invoke(_call_desc);
  j00 = _call_desc.arg_7;
  j11 = _call_desc.arg_8;
  j22 = _call_desc.arg_9;
  j33 = _call_desc.arg_10;
  j44 = _call_desc.arg_11;
  j55 = _call_desc.arg_12;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_i_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble_o_cdouble
class _0RL_cd_45918115931636AF_44000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_44000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Double arg_3;
  ::CORBA::Double arg_4;
  ::CORBA::Double arg_5;
  ::CORBA::Double arg_6;
  ::CORBA::Double arg_7;
  ::CORBA::Double arg_8;
  ::CORBA::Double arg_9;
  ::CORBA::Double arg_10;
  ::CORBA::Double arg_11;
  ::CORBA::Double arg_12;
  ::CORBA::Boolean result;
};

void _0RL_cd_45918115931636AF_44000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;
  arg_5 >>= _n;
  arg_6 >>= _n;

}

void _0RL_cd_45918115931636AF_44000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;
  (::CORBA::Double&)arg_3 <<= _n;
  (::CORBA::Double&)arg_4 <<= _n;
  (::CORBA::Double&)arg_5 <<= _n;
  (::CORBA::Double&)arg_6 <<= _n;

}

void _0RL_cd_45918115931636AF_44000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  arg_7 >>= _n;
  arg_8 >>= _n;
  arg_9 >>= _n;
  arg_10 >>= _n;
  arg_11 >>= _n;
  arg_12 >>= _n;

}

void _0RL_cd_45918115931636AF_44000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (::CORBA::Double&)arg_7 <<= _n;
  (::CORBA::Double&)arg_8 <<= _n;
  (::CORBA::Double&)arg_9 <<= _n;
  (::CORBA::Double&)arg_10 <<= _n;
  (::CORBA::Double&)arg_11 <<= _n;
  (::CORBA::Double&)arg_12 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_54000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_44000000* tcd = (_0RL_cd_45918115931636AF_44000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->configurationFromJointAnglesRight(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7, tcd->arg_8, tcd->arg_9, tcd->arg_10, tcd->arg_11, tcd->arg_12);


}

::CORBA::Boolean _objref_armServer::configurationFromJointAnglesRight(::CORBA::Double j00, ::CORBA::Double j11, ::CORBA::Double j22, ::CORBA::Double j33, ::CORBA::Double j44, ::CORBA::Double j55, ::CORBA::Double j66, ::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_44000000 _call_desc(_0RL_lcfn_45918115931636AF_54000000, "configurationFromJointAnglesRight", 34);
  _call_desc.arg_0 = j00;
  _call_desc.arg_1 = j11;
  _call_desc.arg_2 = j22;
  _call_desc.arg_3 = j33;
  _call_desc.arg_4 = j44;
  _call_desc.arg_5 = j55;
  _call_desc.arg_6 = j66;

  _invoke(_call_desc);
  x = _call_desc.arg_7;
  y = _call_desc.arg_8;
  z = _call_desc.arg_9;
  r = _call_desc.arg_10;
  p = _call_desc.arg_11;
  w = _call_desc.arg_12;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_64000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_44000000* tcd = (_0RL_cd_45918115931636AF_44000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  tcd->result = impl->configurationFromJointAnglesLeft(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6, tcd->arg_7, tcd->arg_8, tcd->arg_9, tcd->arg_10, tcd->arg_11, tcd->arg_12);


}

::CORBA::Boolean _objref_armServer::configurationFromJointAnglesLeft(::CORBA::Double j00, ::CORBA::Double j11, ::CORBA::Double j22, ::CORBA::Double j33, ::CORBA::Double j44, ::CORBA::Double j55, ::CORBA::Double j66, ::CORBA::Double& x, ::CORBA::Double& y, ::CORBA::Double& z, ::CORBA::Double& r, ::CORBA::Double& p, ::CORBA::Double& w)
{
  _0RL_cd_45918115931636AF_44000000 _call_desc(_0RL_lcfn_45918115931636AF_64000000, "configurationFromJointAnglesLeft", 33);
  _call_desc.arg_0 = j00;
  _call_desc.arg_1 = j11;
  _call_desc.arg_2 = j22;
  _call_desc.arg_3 = j33;
  _call_desc.arg_4 = j44;
  _call_desc.arg_5 = j55;
  _call_desc.arg_6 = j66;

  _invoke(_call_desc);
  x = _call_desc.arg_7;
  y = _call_desc.arg_8;
  z = _call_desc.arg_9;
  r = _call_desc.arg_10;
  p = _call_desc.arg_11;
  w = _call_desc.arg_12;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cstring_o_cstring
class _0RL_cd_45918115931636AF_74000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_45918115931636AF_74000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0;
  ::CORBA::String_var arg_1;
};

void _0RL_cd_45918115931636AF_74000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_45918115931636AF_74000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_0 = _n.unmarshalString(0);
  arg_1 = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_84000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_74000000* tcd = (_0RL_cd_45918115931636AF_74000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getIDLVersionString(tcd->arg_0.out(), tcd->arg_1.out());


}

void _objref_armServer::getIDLVersionString(::CORBA::String_out revision, ::CORBA::String_out date)
{
  _0RL_cd_45918115931636AF_74000000 _call_desc(_0RL_lcfn_45918115931636AF_84000000, "getIDLVersionString", 20);


  _invoke(_call_desc);
  revision = _call_desc.arg_0._retn();
  date = _call_desc.arg_1._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_45918115931636AF_94000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_45918115931636AF_74000000* tcd = (_0RL_cd_45918115931636AF_74000000*)cd;
  _impl_armServer* impl = (_impl_armServer*) svnt->_ptrToInterface(armServer::_PD_repoId);
  impl->getSrcVersionString(tcd->arg_0.out(), tcd->arg_1.out());


}

void _objref_armServer::getSrcVersionString(::CORBA::String_out revision, ::CORBA::String_out date)
{
  _0RL_cd_45918115931636AF_74000000 _call_desc(_0RL_lcfn_45918115931636AF_94000000, "getSrcVersionString", 20);


  _invoke(_call_desc);
  revision = _call_desc.arg_0._retn();
  date = _call_desc.arg_1._retn();


}
_pof_armServer::~_pof_armServer() {}


omniObjRef*
_pof_armServer::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_armServer(ior, id);
}


::CORBA::Boolean
_pof_armServer::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::armServer::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_armServer _the_pof_armServer;

_impl_armServer::~_impl_armServer() {}


::CORBA::Boolean
_impl_armServer::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getStatus") ) {

    _0RL_cd_45918115931636AF_00000000 _call_desc(_0RL_lcfn_45918115931636AF_10000000, "getStatus", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "jointCalibration") ) {

    _0RL_cd_45918115931636AF_20000000 _call_desc(_0RL_lcfn_45918115931636AF_30000000, "jointCalibration", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "checkCalibration") ) {

    _0RL_cd_45918115931636AF_40000000 _call_desc(_0RL_lcfn_45918115931636AF_50000000, "checkCalibration", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "switchServo") ) {

    _0RL_cd_45918115931636AF_60000000 _call_desc(_0RL_lcfn_45918115931636AF_70000000, "switchServo", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getServoStatus") ) {

    _0RL_cd_45918115931636AF_80000000 _call_desc(_0RL_lcfn_45918115931636AF_90000000, "getServoStatus", 15, 1);
    _call_desc.arg_0 = _call_desc.arg_0_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "protectiveStop") ) {

    _0RL_cd_45918115931636AF_a0000000 _call_desc(_0RL_lcfn_45918115931636AF_b0000000, "protectiveStop", 15, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "exitProtectiveStop") ) {

    _0RL_cd_45918115931636AF_a0000000 _call_desc(_0RL_lcfn_45918115931636AF_c0000000, "exitProtectiveStop", 19, 1);
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "motionCancel") ) {

    _0RL_cd_45918115931636AF_d0000000 _call_desc(_0RL_lcfn_45918115931636AF_e0000000, "motionCancel", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setOffsetRightHand") ) {

    _0RL_cd_45918115931636AF_f0000000 _call_desc(_0RL_lcfn_45918115931636AF_01000000, "setOffsetRightHand", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getOffsetRightHand") ) {

    _0RL_cd_45918115931636AF_11000000 _call_desc(_0RL_lcfn_45918115931636AF_21000000, "getOffsetRightHand", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setOffsetLeftHand") ) {

    _0RL_cd_45918115931636AF_f0000000 _call_desc(_0RL_lcfn_45918115931636AF_31000000, "setOffsetLeftHand", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getOffsetLeftHand") ) {

    _0RL_cd_45918115931636AF_11000000 _call_desc(_0RL_lcfn_45918115931636AF_41000000, "getOffsetLeftHand", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setOffsetRightHandEx") ) {

    _0RL_cd_45918115931636AF_51000000 _call_desc(_0RL_lcfn_45918115931636AF_61000000, "setOffsetRightHandEx", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getOffsetRightHandEx") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_81000000, "getOffsetRightHandEx", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setOffsetLeftHandEx") ) {

    _0RL_cd_45918115931636AF_51000000 _call_desc(_0RL_lcfn_45918115931636AF_91000000, "setOffsetLeftHandEx", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getOffsetLeftHandEx") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_a1000000, "getOffsetLeftHandEx", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "inMotion") ) {

    _0RL_cd_45918115931636AF_b1000000 _call_desc(_0RL_lcfn_45918115931636AF_c1000000, "inMotion", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setAngleChestP") ) {

    _0RL_cd_45918115931636AF_d1000000 _call_desc(_0RL_lcfn_45918115931636AF_e1000000, "setAngleChestP", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setAnglesNeckP") ) {

    _0RL_cd_45918115931636AF_f1000000 _call_desc(_0RL_lcfn_45918115931636AF_02000000, "setAnglesNeckP", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setJointAnglesRightArmP") ) {

    _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_22000000, "setJointAnglesRightArmP", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setJointAnglesLeftArmP") ) {

    _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_32000000, "setJointAnglesLeftArmP", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setTargetRightArmP") ) {

    _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_42000000, "setTargetRightArmP", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setTargetLeftArmP") ) {

    _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_52000000, "setTargetLeftArmP", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "seqTargetRightArmP") ) {

    _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_62000000, "seqTargetRightArmP", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "seqTargetLeftArmP") ) {

    _0RL_cd_45918115931636AF_12000000 _call_desc(_0RL_lcfn_45918115931636AF_72000000, "seqTargetLeftArmP", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setTargetRightArmMatrixP") ) {

    _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_92000000, "setTargetRightArmMatrixP", 25, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setTargetLeftArmMatrixP") ) {

    _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_a2000000, "setTargetLeftArmMatrixP", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "seqTargetRightArmMatrixP") ) {

    _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_b2000000, "seqTargetRightArmMatrixP", 25, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "seqTargetLeftArmMatrixP") ) {

    _0RL_cd_45918115931636AF_82000000 _call_desc(_0RL_lcfn_45918115931636AF_c2000000, "seqTargetLeftArmMatrixP", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAngleChest") ) {

    _0RL_cd_45918115931636AF_d2000000 _call_desc(_0RL_lcfn_45918115931636AF_e2000000, "getJointAngleChest", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAngleChestReal") ) {

    _0RL_cd_45918115931636AF_d2000000 _call_desc(_0RL_lcfn_45918115931636AF_f2000000, "getJointAngleChestReal", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAngleChestGoal") ) {

    _0RL_cd_45918115931636AF_d2000000 _call_desc(_0RL_lcfn_45918115931636AF_03000000, "getJointAngleChestGoal", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAnglesNeck") ) {

    _0RL_cd_45918115931636AF_13000000 _call_desc(_0RL_lcfn_45918115931636AF_23000000, "getJointAnglesNeck", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAnglesNeckReal") ) {

    _0RL_cd_45918115931636AF_13000000 _call_desc(_0RL_lcfn_45918115931636AF_33000000, "getJointAnglesNeckReal", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAnglesRightArm") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_43000000, "getJointAnglesRightArm", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAnglesRightArmReal") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_53000000, "getJointAnglesRightArmReal", 27, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAnglesLeftArm") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_63000000, "getJointAnglesLeftArm", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAnglesLeftArmReal") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_73000000, "getJointAnglesLeftArmReal", 26, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionRightArm") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_83000000, "getPositionRightArm", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionRightArmReal") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_93000000, "getPositionRightArmReal", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionLeftArm") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_a3000000, "getPositionLeftArm", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionLeftArmReal") ) {

    _0RL_cd_45918115931636AF_71000000 _call_desc(_0RL_lcfn_45918115931636AF_b3000000, "getPositionLeftArmReal", 23, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionRightArmMatrix") ) {

    _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_d3000000, "getPositionRightArmMatrix", 26, 1);
    _call_desc.arg_0 = _call_desc.arg_0_;
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionRightArmMatrixReal") ) {

    _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_e3000000, "getPositionRightArmMatrixReal", 30, 1);
    _call_desc.arg_0 = _call_desc.arg_0_;
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionLeftArmMatrix") ) {

    _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_f3000000, "getPositionLeftArmMatrix", 25, 1);
    _call_desc.arg_0 = _call_desc.arg_0_;
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPositionLeftArmMatrixReal") ) {

    _0RL_cd_45918115931636AF_c3000000 _call_desc(_0RL_lcfn_45918115931636AF_04000000, "getPositionLeftArmMatrixReal", 29, 1);
    _call_desc.arg_0 = _call_desc.arg_0_;
    _call_desc.arg_1 = _call_desc.arg_1_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "jointAnglesFromConfigurationRight") ) {

    _0RL_cd_45918115931636AF_14000000 _call_desc(_0RL_lcfn_45918115931636AF_24000000, "jointAnglesFromConfigurationRight", 34, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "jointAnglesFromConfigurationLeft") ) {

    _0RL_cd_45918115931636AF_14000000 _call_desc(_0RL_lcfn_45918115931636AF_34000000, "jointAnglesFromConfigurationLeft", 33, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "configurationFromJointAnglesRight") ) {

    _0RL_cd_45918115931636AF_44000000 _call_desc(_0RL_lcfn_45918115931636AF_54000000, "configurationFromJointAnglesRight", 34, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "configurationFromJointAnglesLeft") ) {

    _0RL_cd_45918115931636AF_44000000 _call_desc(_0RL_lcfn_45918115931636AF_64000000, "configurationFromJointAnglesLeft", 33, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getIDLVersionString") ) {

    _0RL_cd_45918115931636AF_74000000 _call_desc(_0RL_lcfn_45918115931636AF_84000000, "getIDLVersionString", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSrcVersionString") ) {

    _0RL_cd_45918115931636AF_74000000 _call_desc(_0RL_lcfn_45918115931636AF_94000000, "getSrcVersionString", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_armServer::_ptrToInterface(const char* id)
{
  if( id == ::armServer::_PD_repoId )
    return (::_impl_armServer*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::armServer::_PD_repoId) )
    return (::_impl_armServer*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_armServer::_mostDerivedRepoId()
{
  return ::armServer::_PD_repoId;
}

POA_armServer::~POA_armServer() {}

